{
	"id": "9d6ce439ab6f0824a8632b03e7b4f70c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/src/"
			]
		},
		"sources": {
			"src/ERC20Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\npragma solidity ^0.8.12;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20//extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Initializable is Context, IERC20, IERC20Metadata, Initializable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function initialize(address creator, string memory name_, string memory symbol_)\n        external\n        initializer\n    {\n        _mint(creator, 10**27);\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount)\n        public\n        virtual\n        returns (bool)\n    {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender)\n        public\n        view\n        virtual\n        returns (uint256)\n    {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount)\n        public\n        virtual\n        returns (bool)\n    {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue)\n        public\n        virtual\n        returns (bool)\n    {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue)\n        public\n        virtual\n        returns (bool)\n    {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(\n            currentAllowance >= subtractedValue,\n            \"ERC20: decreased allowance below zero\"\n        );\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n        _update(from, to, amount);\n    }\n\n    /**\n     * @dev Transfers `amount` of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is\n     * the zero address. All customizations to transfers, mints, and burns should be done by overriding this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        if (from == address(0)) {\n            _totalSupply += amount;\n        } else {\n            uint256 fromBalance = _balances[from];\n            require(\n                fromBalance >= amount,\n                \"ERC20: transfer amount exceeds balance\"\n            );\n            unchecked {\n                // Overflow not possible: amount <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - amount;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: amount <= totalSupply or amount <= fromBalance <= totalSupply.\n                _totalSupply -= amount;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + amount is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += amount;\n            }\n        }\n\n        emit Transfer(from, to, amount);\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n        _update(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, by transferring it to address(0).\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n        _update(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(\n                currentAllowance >= amount,\n                \"ERC20: insufficient allowance\"\n            );\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20//extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20//extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20//extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"@openzeppelin/contracts/token/ERC20//extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a6522c733dd11e8ab1280f770eb7cbb3b773403941283d61ce272ecdcac6ee6064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6522c733dd11e8ab1280f770eb7cbb3b773403941283d61ce272ecdcac6ee6064736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 MSTORE 0x2C PUSH20 0x3DD11E8AB1280F770EB7CBB3B773403941283D61 0xCE 0x27 0x2E 0xCD 0xCA 0xC6 0xEE PUSH1 0x64 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "194:9169:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6522c733dd11e8ab1280f770eb7cbb3b773403941283d61ce272ecdcac6ee6064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 MSTORE 0x2C PUSH20 0x3DD11E8AB1280F770EB7CBB3B773403941283D61 0xCE 0x27 0x2E 0xCD 0xCA 0xC6 0xEE PUSH1 0x64 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "194:9169:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6522c733dd11e8ab1280f770eb7cbb3b773403941283d61ce272ecdcac6ee6064736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/token/ERC20//extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"src/ERC20Initializable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/ERC20Initializable.sol": {
				"ERC20Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"initialize(address,string,string)": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/ERC20Initializable.sol\":1625:11941  contract ERC20Initializable is Context, IERC20, IERC20Metadata, Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/ERC20Initializable.sol\":1625:11941  contract ERC20Initializable is Context, IERC20, IERC20Metadata, Initializable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x90657147\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/ERC20Initializable.sol\":2377:2466  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/ERC20Initializable.sol\":4664:4880  function approve(address spender, uint256 amount)... */\n    tag_4:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"src/ERC20Initializable.sol\":4664:4880  function approve(address spender, uint256 amount)... */\n      tag_18\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"src/ERC20Initializable.sol\":3447:3544  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"src/ERC20Initializable.sol\":3525:3537  _totalSupply */\n      sload(0x03)\n        /* \"src/ERC20Initializable.sol\":3447:3544  function totalSupply() public view virtual returns (uint256) {... */\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"src/ERC20Initializable.sol\":3447:3544  function totalSupply() public view virtual returns (uint256) {... */\n      tag_18\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"src/ERC20Initializable.sol\":5442:5719  function transferFrom(... */\n    tag_6:\n      tag_20\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n        /* \"src/ERC20Initializable.sol\":3305:3387  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"src/ERC20Initializable.sol\":3378:3380  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"src/ERC20Initializable.sol\":3305:3387  function decimals() public view virtual returns (uint8) {... */\n      tag_18\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"src/ERC20Initializable.sol\":6114:6376  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_8:\n      tag_20\n      tag_40\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"src/ERC20Initializable.sol\":3602:3718  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_26\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20Initializable.sol\":3693:3711  _balances[account] */\n      and\n        /* \"src/ERC20Initializable.sol\":3667:3674  uint256 */\n      0x00\n        /* \"src/ERC20Initializable.sol\":3693:3711  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20Initializable.sol\":3693:3702  _balances */\n      0x01\n        /* \"src/ERC20Initializable.sol\":3693:3711  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"src/ERC20Initializable.sol\":3602:3718  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"src/ERC20Initializable.sol\":2101:2312  function initialize(address creator, string memory name_, string memory symbol_)... */\n    tag_10:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"src/ERC20Initializable.sol\":2579:2672  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_16\n      tag_53\n      jump\t// in\n        /* \"src/ERC20Initializable.sol\":6863:7352  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_12:\n      tag_20\n      tag_56\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"src/ERC20Initializable.sol\":3914:4122  function transfer(address to, uint256 amount)... */\n    tag_13:\n      tag_20\n      tag_60\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"src/ERC20Initializable.sol\":4180:4356  function allowance(address owner, address spender)... */\n    tag_14:\n      tag_26\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"src/ERC20Initializable.sol\":2377:2466  function name() public view virtual returns (string memory) {... */\n    tag_17:\n        /* \"src/ERC20Initializable.sol\":2422:2435  string memory */\n      0x60\n        /* \"src/ERC20Initializable.sol\":2454:2459  _name */\n      0x04\n        /* \"src/ERC20Initializable.sol\":2447:2459  return _name */\n      dup1\n      sload\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_70\n      jump\t// in\n    tag_71:\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n    tag_73:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_74:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_74\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/ERC20Initializable.sol\":2377:2466  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/ERC20Initializable.sol\":4664:4880  function approve(address spender, uint256 amount)... */\n    tag_23:\n        /* \"src/ERC20Initializable.sol\":4762:4766  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"src/ERC20Initializable.sol\":4820:4852  _approve(owner, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"src/ERC20Initializable.sol\":4836:4843  spender */\n      dup6\n        /* \"src/ERC20Initializable.sol\":4845:4851  amount */\n      dup6\n        /* \"src/ERC20Initializable.sol\":4820:4828  _approve */\n      tag_79\n        /* \"src/ERC20Initializable.sol\":4820:4852  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"src/ERC20Initializable.sol\":4869:4873  true */\n      0x01\n        /* \"src/ERC20Initializable.sol\":4862:4873  return true */\n      swap2\n      pop\n      pop\n        /* \"src/ERC20Initializable.sol\":4664:4880  function approve(address spender, uint256 amount)... */\n    tag_75:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC20Initializable.sol\":5442:5719  function transferFrom(... */\n    tag_33:\n        /* \"src/ERC20Initializable.sol\":5560:5564  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"src/ERC20Initializable.sol\":5616:5654  _spendAllowance(from, spender, amount) */\n      tag_83\n        /* \"src/ERC20Initializable.sol\":5632:5636  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"src/ERC20Initializable.sol\":5647:5653  amount */\n      dup6\n        /* \"src/ERC20Initializable.sol\":5616:5631  _spendAllowance */\n      tag_84\n        /* \"src/ERC20Initializable.sol\":5616:5654  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_83:\n        /* \"src/ERC20Initializable.sol\":5664:5691  _transfer(from, to, amount) */\n      tag_85\n        /* \"src/ERC20Initializable.sol\":5674:5678  from */\n      dup6\n        /* \"src/ERC20Initializable.sol\":5680:5682  to */\n      dup6\n        /* \"src/ERC20Initializable.sol\":5684:5690  amount */\n      dup6\n        /* \"src/ERC20Initializable.sol\":5664:5673  _transfer */\n      tag_86\n        /* \"src/ERC20Initializable.sol\":5664:5691  _transfer(from, to, amount) */\n      jump\t// in\n    tag_85:\n      pop\n        /* \"src/ERC20Initializable.sol\":5708:5712  true */\n      0x01\n      swap5\n        /* \"src/ERC20Initializable.sol\":5442:5719  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC20Initializable.sol\":6114:6376  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_41:\n        /* \"src/ERC20Initializable.sol\":6226:6230  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"src/ERC20Initializable.sol\":6284:6348  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_78\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"src/ERC20Initializable.sol\":6300:6307  spender */\n      dup6\n        /* \"src/ERC20Initializable.sol\":6337:6347  addedValue */\n      dup6\n        /* \"src/ERC20Initializable.sol\":6309:6334  allowance(owner, spender) */\n      tag_91\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"src/ERC20Initializable.sol\":6300:6307  spender */\n      dup4\n        /* \"src/ERC20Initializable.sol\":6309:6318  allowance */\n      tag_66\n        /* \"src/ERC20Initializable.sol\":6309:6334  allowance(owner, spender) */\n      jump\t// in\n    tag_91:\n        /* \"src/ERC20Initializable.sol\":6309:6347  allowance(owner, spender) + addedValue */\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"src/ERC20Initializable.sol\":6284:6292  _approve */\n      tag_79\n        /* \"src/ERC20Initializable.sol\":6284:6348  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"src/ERC20Initializable.sol\":2101:2312  function initialize(address creator, string memory name_, string memory symbol_)... */\n    tag_51:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3268:3287  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3291:3304  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3290:3304  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3336:3370  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_96\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3354:3366  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3369:3370  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3354:3366  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3354:3370  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3336:3370  isTopLevelCall && _initialized < 1 */\n    tag_96:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3335:3432  (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_100\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3404:3408  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3376:3431  !Address.isContract(address(this)) && _initialized == 1 */\n      tag_100\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3414:3426  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3414:3431  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3376:3431  !Address.isContract(address(this)) && _initialized == 1 */\n    tag_100:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3314:3504  require(... */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4648:4650   */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3314:3504  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4630:4651   */\n      mstore\n        /* \"#utility.yul\":4687:4689   */\n      0x2e\n        /* \"#utility.yul\":4667:4685   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4660:4690   */\n      mstore\n        /* \"#utility.yul\":4726:4760   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":4706:4724   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4699:4761   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":4777:4795   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4770:4814   */\n      mstore\n        /* \"#utility.yul\":4831:4850   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3314:3504  require(... */\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3514:3526  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3514:3530  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3529:3530  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3514:3530  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3540:3605  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3574:3587  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3574:3594  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3540:3605  if (isTopLevelCall) {... */\n    tag_104:\n        /* \"src/ERC20Initializable.sol\":2233:2255  _mint(creator, 10**27) */\n      tag_106\n        /* \"src/ERC20Initializable.sol\":2239:2246  creator */\n      dup5\n        /* \"src/ERC20Initializable.sol\":2248:2254  10**27 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"src/ERC20Initializable.sol\":2233:2238  _mint */\n      tag_107\n        /* \"src/ERC20Initializable.sol\":2233:2255  _mint(creator, 10**27) */\n      jump\t// in\n    tag_106:\n        /* \"src/ERC20Initializable.sol\":2265:2270  _name */\n      0x04\n        /* \"src/ERC20Initializable.sol\":2265:2278  _name = name_ */\n      tag_108\n        /* \"src/ERC20Initializable.sol\":2273:2278  name_ */\n      dup5\n        /* \"src/ERC20Initializable.sol\":2265:2270  _name */\n      dup3\n        /* \"src/ERC20Initializable.sol\":2265:2278  _name = name_ */\n      tag_109\n      jump\t// in\n    tag_108:\n      pop\n        /* \"src/ERC20Initializable.sol\":2288:2295  _symbol */\n      0x05\n        /* \"src/ERC20Initializable.sol\":2288:2305  _symbol = symbol_ */\n      tag_110\n        /* \"src/ERC20Initializable.sol\":2298:2305  symbol_ */\n      dup4\n        /* \"src/ERC20Initializable.sol\":2288:2295  _symbol */\n      dup3\n        /* \"src/ERC20Initializable.sol\":2288:2305  _symbol = symbol_ */\n      tag_109\n      jump\t// in\n    tag_110:\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3629:3643  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3625:3724  if (isTopLevelCall) {... */\n      iszero\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3675:3680  false */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3659:3680  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3699:3713  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3699:3713  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3699:3713  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3625:3724  if (isTopLevelCall) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3258:3730  {... */\n      pop\n        /* \"src/ERC20Initializable.sol\":2101:2312  function initialize(address creator, string memory name_, string memory symbol_)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC20Initializable.sol\":2579:2672  function symbol() public view virtual returns (string memory) {... */\n    tag_53:\n        /* \"src/ERC20Initializable.sol\":2626:2639  string memory */\n      0x60\n        /* \"src/ERC20Initializable.sol\":2658:2665  _symbol */\n      0x05\n        /* \"src/ERC20Initializable.sol\":2651:2665  return _symbol */\n      dup1\n      sload\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n        /* \"src/ERC20Initializable.sol\":6863:7352  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_57:\n        /* \"src/ERC20Initializable.sol\":6980:6984  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"src/ERC20Initializable.sol\":6980:6984  bool */\n      dup2\n        /* \"src/ERC20Initializable.sol\":7065:7090  allowance(owner, spender) */\n      tag_122\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"src/ERC20Initializable.sol\":7082:7089  spender */\n      dup7\n        /* \"src/ERC20Initializable.sol\":7065:7074  allowance */\n      tag_66\n        /* \"src/ERC20Initializable.sol\":7065:7090  allowance(owner, spender) */\n      jump\t// in\n    tag_122:\n        /* \"src/ERC20Initializable.sol\":7038:7090  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"src/ERC20Initializable.sol\":7141:7156  subtractedValue */\n      dup4\n        /* \"src/ERC20Initializable.sol\":7121:7137  currentAllowance */\n      dup2\n        /* \"src/ERC20Initializable.sol\":7121:7156  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"src/ERC20Initializable.sol\":7100:7219  require(... */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7466:7468   */\n      0x20\n        /* \"src/ERC20Initializable.sol\":7100:7219  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7448:7469   */\n      mstore\n        /* \"#utility.yul\":7505:7507   */\n      0x25\n        /* \"#utility.yul\":7485:7503   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7478:7508   */\n      mstore\n        /* \"#utility.yul\":7544:7578   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":7524:7542   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7517:7579   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":7595:7613   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7588:7623   */\n      mstore\n        /* \"#utility.yul\":7640:7659   */\n      0x84\n      add\n        /* \"src/ERC20Initializable.sol\":7100:7219  require(... */\n      tag_102\n        /* \"#utility.yul\":7264:7665   */\n      jump\n        /* \"src/ERC20Initializable.sol\":7100:7219  require(... */\n    tag_123:\n        /* \"src/ERC20Initializable.sol\":7253:7313  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_85\n        /* \"src/ERC20Initializable.sol\":7262:7267  owner */\n      dup3\n        /* \"src/ERC20Initializable.sol\":7269:7276  spender */\n      dup7\n        /* \"src/ERC20Initializable.sol\":7297:7312  subtractedValue */\n      dup7\n        /* \"src/ERC20Initializable.sol\":7278:7294  currentAllowance */\n      dup5\n        /* \"src/ERC20Initializable.sol\":7278:7312  currentAllowance - subtractedValue */\n      sub\n        /* \"src/ERC20Initializable.sol\":7253:7261  _approve */\n      tag_79\n        /* \"src/ERC20Initializable.sol\":7253:7313  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"src/ERC20Initializable.sol\":3914:4122  function transfer(address to, uint256 amount)... */\n    tag_61:\n        /* \"src/ERC20Initializable.sol\":4008:4012  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"src/ERC20Initializable.sol\":4066:4094  _transfer(owner, to, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"src/ERC20Initializable.sol\":4083:4085  to */\n      dup6\n        /* \"src/ERC20Initializable.sol\":4087:4093  amount */\n      dup6\n        /* \"src/ERC20Initializable.sol\":4066:4075  _transfer */\n      tag_86\n        /* \"src/ERC20Initializable.sol\":4066:4094  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"src/ERC20Initializable.sol\":4180:4356  function allowance(address owner, address spender)... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20Initializable.sol\":4322:4340  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"src/ERC20Initializable.sol\":4292:4299  uint256 */\n      0x00\n        /* \"src/ERC20Initializable.sol\":4322:4340  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20Initializable.sol\":4322:4333  _allowances */\n      0x02\n        /* \"src/ERC20Initializable.sol\":4322:4340  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC20Initializable.sol\":4322:4349  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"src/ERC20Initializable.sol\":4180:4356  function allowance(address owner, address spender)... */\n      jump\t// out\n        /* \"src/ERC20Initializable.sol\":10801:11171  function _approve(... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20Initializable.sol\":10932:10951  owner != address(0) */\n      dup4\n      and\n        /* \"src/ERC20Initializable.sol\":10924:10992  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7872:7874   */\n      0x20\n        /* \"src/ERC20Initializable.sol\":10924:10992  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7854:7875   */\n      mstore\n        /* \"#utility.yul\":7911:7913   */\n      0x24\n        /* \"#utility.yul\":7891:7909   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7884:7914   */\n      mstore\n        /* \"#utility.yul\":7950:7984   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":7930:7948   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7923:7985   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8001:8019   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7994:8028   */\n      mstore\n        /* \"#utility.yul\":8045:8064   */\n      0x84\n      add\n        /* \"src/ERC20Initializable.sol\":10924:10992  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_102\n        /* \"#utility.yul\":7670:8070   */\n      jump\n        /* \"src/ERC20Initializable.sol\":10924:10992  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20Initializable.sol\":11010:11031  spender != address(0) */\n      dup3\n      and\n        /* \"src/ERC20Initializable.sol\":11002:11070  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8277:8279   */\n      0x20\n        /* \"src/ERC20Initializable.sol\":11002:11070  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8259:8280   */\n      mstore\n        /* \"#utility.yul\":8316:8318   */\n      0x22\n        /* \"#utility.yul\":8296:8314   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8289:8319   */\n      mstore\n        /* \"#utility.yul\":8355:8389   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":8335:8353   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8328:8390   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":8406:8424   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8399:8431   */\n      mstore\n        /* \"#utility.yul\":8448:8467   */\n      0x84\n      add\n        /* \"src/ERC20Initializable.sol\":11002:11070  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":8075:8473   */\n      jump\n        /* \"src/ERC20Initializable.sol\":11002:11070  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20Initializable.sol\":11081:11099  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC20Initializable.sol\":11081:11092  _allowances */\n      0x02\n        /* \"src/ERC20Initializable.sol\":11081:11099  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC20Initializable.sol\":11081:11108  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"src/ERC20Initializable.sol\":11081:11117  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"src/ERC20Initializable.sol\":11132:11164  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"src/ERC20Initializable.sol\":11132:11164  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"src/ERC20Initializable.sol\":11132:11164  Approval(owner, spender, amount) */\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/ERC20Initializable.sol\":10801:11171  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC20Initializable.sol\":11452:11939  function _spendAllowance(... */\n    tag_84:\n        /* \"src/ERC20Initializable.sol\":11582:11606  uint256 currentAllowance */\n      0x00\n        /* \"src/ERC20Initializable.sol\":11609:11634  allowance(owner, spender) */\n      tag_141\n        /* \"src/ERC20Initializable.sol\":11619:11624  owner */\n      dup5\n        /* \"src/ERC20Initializable.sol\":11626:11633  spender */\n      dup5\n        /* \"src/ERC20Initializable.sol\":11609:11618  allowance */\n      tag_66\n        /* \"src/ERC20Initializable.sol\":11609:11634  allowance(owner, spender) */\n      jump\t// in\n    tag_141:\n        /* \"src/ERC20Initializable.sol\":11582:11634  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"src/ERC20Initializable.sol\":11648:11664  currentAllowance */\n      dup2\n        /* \"src/ERC20Initializable.sol\":11648:11685  currentAllowance != type(uint256).max */\n      eq\n        /* \"src/ERC20Initializable.sol\":11644:11933  if (currentAllowance != type(uint256).max) {... */\n      tag_111\n      jumpi\n        /* \"src/ERC20Initializable.sol\":11746:11752  amount */\n      dup2\n        /* \"src/ERC20Initializable.sol\":11726:11742  currentAllowance */\n      dup2\n        /* \"src/ERC20Initializable.sol\":11726:11752  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"src/ERC20Initializable.sol\":11701:11815  require(... */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8680:8682   */\n      0x20\n        /* \"src/ERC20Initializable.sol\":11701:11815  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8662:8683   */\n      mstore\n        /* \"#utility.yul\":8719:8721   */\n      0x1d\n        /* \"#utility.yul\":8699:8717   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8692:8722   */\n      mstore\n        /* \"#utility.yul\":8758:8789   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":8738:8756   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8731:8790   */\n      mstore\n        /* \"#utility.yul\":8807:8825   */\n      0x64\n      add\n        /* \"src/ERC20Initializable.sol\":11701:11815  require(... */\n      tag_102\n        /* \"#utility.yul\":8478:8831   */\n      jump\n        /* \"src/ERC20Initializable.sol\":11701:11815  require(... */\n    tag_143:\n        /* \"src/ERC20Initializable.sol\":11857:11908  _approve(owner, spender, currentAllowance - amount) */\n      tag_111\n        /* \"src/ERC20Initializable.sol\":11866:11871  owner */\n      dup5\n        /* \"src/ERC20Initializable.sol\":11873:11880  spender */\n      dup5\n        /* \"src/ERC20Initializable.sol\":11901:11907  amount */\n      dup5\n        /* \"src/ERC20Initializable.sol\":11882:11898  currentAllowance */\n      dup5\n        /* \"src/ERC20Initializable.sol\":11882:11907  currentAllowance - amount */\n      sub\n        /* \"src/ERC20Initializable.sol\":11857:11865  _approve */\n      tag_79\n        /* \"src/ERC20Initializable.sol\":11857:11908  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n        /* \"src/ERC20Initializable.sol\":7717:8011  function _transfer(... */\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20Initializable.sol\":7835:7853  from != address(0) */\n      dup4\n      and\n        /* \"src/ERC20Initializable.sol\":7827:7895  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9038:9040   */\n      0x20\n        /* \"src/ERC20Initializable.sol\":7827:7895  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9020:9041   */\n      mstore\n        /* \"#utility.yul\":9077:9079   */\n      0x25\n        /* \"#utility.yul\":9057:9075   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9050:9080   */\n      mstore\n        /* \"#utility.yul\":9116:9150   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":9096:9114   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9089:9151   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":9167:9185   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9160:9195   */\n      mstore\n        /* \"#utility.yul\":9212:9231   */\n      0x84\n      add\n        /* \"src/ERC20Initializable.sol\":7827:7895  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_102\n        /* \"#utility.yul\":8836:9237   */\n      jump\n        /* \"src/ERC20Initializable.sol\":7827:7895  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20Initializable.sol\":7913:7929  to != address(0) */\n      dup3\n      and\n        /* \"src/ERC20Initializable.sol\":7905:7969  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9444:9446   */\n      0x20\n        /* \"src/ERC20Initializable.sol\":7905:7969  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9426:9447   */\n      mstore\n        /* \"#utility.yul\":9483:9485   */\n      0x23\n        /* \"#utility.yul\":9463:9481   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9456:9486   */\n      mstore\n        /* \"#utility.yul\":9522:9556   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":9502:9520   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9495:9557   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":9573:9591   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9566:9599   */\n      mstore\n        /* \"#utility.yul\":9616:9635   */\n      0x84\n      add\n        /* \"src/ERC20Initializable.sol\":7905:7969  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":9242:9641   */\n      jump\n        /* \"src/ERC20Initializable.sol\":7905:7969  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_151:\n        /* \"src/ERC20Initializable.sol\":7979:8004  _update(from, to, amount) */\n      tag_154\n        /* \"src/ERC20Initializable.sol\":7987:7991  from */\n      dup4\n        /* \"src/ERC20Initializable.sol\":7993:7995  to */\n      dup4\n        /* \"src/ERC20Initializable.sol\":7997:8003  amount */\n      dup4\n        /* \"src/ERC20Initializable.sol\":7979:7986  _update */\n      tag_155\n        /* \"src/ERC20Initializable.sol\":7979:8004  _update(from, to, amount) */\n      jump\t// in\n    tag_154:\n        /* \"src/ERC20Initializable.sol\":7717:8011  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC20Initializable.sol\":9692:9877  function _mint(address account, uint256 amount) internal {... */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20Initializable.sol\":9767:9788  account != address(0) */\n      dup3\n      and\n        /* \"src/ERC20Initializable.sol\":9759:9824  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9848:9850   */\n      0x20\n        /* \"src/ERC20Initializable.sol\":9759:9824  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9830:9851   */\n      mstore\n        /* \"#utility.yul\":9887:9889   */\n      0x1f\n        /* \"#utility.yul\":9867:9885   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9860:9890   */\n      mstore\n        /* \"#utility.yul\":9926:9959   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":9906:9924   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9899:9960   */\n      mstore\n        /* \"#utility.yul\":9977:9995   */\n      0x64\n      add\n        /* \"src/ERC20Initializable.sol\":9759:9824  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":9646:10001   */\n      jump\n        /* \"src/ERC20Initializable.sol\":9759:9824  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_158:\n        /* \"src/ERC20Initializable.sol\":9834:9870  _update(address(0), account, amount) */\n      tag_161\n        /* \"src/ERC20Initializable.sol\":9850:9851  0 */\n      0x00\n        /* \"src/ERC20Initializable.sol\":9854:9861  account */\n      dup4\n        /* \"src/ERC20Initializable.sol\":9863:9869  amount */\n      dup4\n        /* \"src/ERC20Initializable.sol\":9834:9841  _update */\n      tag_155\n        /* \"src/ERC20Initializable.sol\":9834:9870  _update(address(0), account, amount) */\n      jump\t// in\n    tag_161:\n        /* \"src/ERC20Initializable.sol\":9692:9877  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC20Initializable.sol\":8311:9360  function _update(... */\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20Initializable.sol\":8431:8449  from == address(0) */\n      dup4\n      and\n        /* \"src/ERC20Initializable.sol\":8427:8872  if (from == address(0)) {... */\n      tag_163\n      jumpi\n        /* \"src/ERC20Initializable.sol\":8481:8487  amount */\n      dup1\n        /* \"src/ERC20Initializable.sol\":8465:8477  _totalSupply */\n      0x03\n      0x00\n        /* \"src/ERC20Initializable.sol\":8465:8487  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_164\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_164:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"src/ERC20Initializable.sol\":8427:8872  if (from == address(0)) {... */\n      tag_165\n      swap1\n      pop\n      jump\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20Initializable.sol\":8540:8555  _balances[from] */\n      dup4\n      and\n        /* \"src/ERC20Initializable.sol\":8518:8537  uint256 fromBalance */\n      0x00\n        /* \"src/ERC20Initializable.sol\":8540:8555  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20Initializable.sol\":8540:8549  _balances */\n      0x01\n        /* \"src/ERC20Initializable.sol\":8540:8555  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/ERC20Initializable.sol\":8594:8615  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"src/ERC20Initializable.sol\":8569:8687  require(... */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10208:10210   */\n      0x20\n        /* \"src/ERC20Initializable.sol\":8569:8687  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10190:10211   */\n      mstore\n        /* \"#utility.yul\":10247:10249   */\n      0x26\n        /* \"#utility.yul\":10227:10245   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10220:10250   */\n      mstore\n        /* \"#utility.yul\":10286:10320   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":10266:10284   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10259:10321   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":10337:10355   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10330:10366   */\n      mstore\n        /* \"#utility.yul\":10383:10402   */\n      0x84\n      add\n        /* \"src/ERC20Initializable.sol\":8569:8687  require(... */\n      tag_102\n        /* \"#utility.yul\":10006:10408   */\n      jump\n        /* \"src/ERC20Initializable.sol\":8569:8687  require(... */\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20Initializable.sol\":8809:8824  _balances[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20Initializable.sol\":8809:8818  _balances */\n      0x01\n        /* \"src/ERC20Initializable.sol\":8809:8824  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/ERC20Initializable.sol\":8827:8847  fromBalance - amount */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"src/ERC20Initializable.sol\":8809:8847  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"src/ERC20Initializable.sol\":8427:8872  if (from == address(0)) {... */\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20Initializable.sol\":8886:8902  to == address(0) */\n      dup3\n      and\n        /* \"src/ERC20Initializable.sol\":8882:9312  if (to == address(0)) {... */\n      tag_169\n      jumpi\n        /* \"src/ERC20Initializable.sol\":9051:9063  _totalSupply */\n      0x03\n        /* \"src/ERC20Initializable.sol\":9051:9073  _totalSupply -= amount */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"src/ERC20Initializable.sol\":8882:9312  if (to == address(0)) {... */\n      jump(tag_170)\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20Initializable.sol\":9264:9277  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC20Initializable.sol\":9264:9273  _balances */\n      0x01\n        /* \"src/ERC20Initializable.sol\":9264:9277  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/ERC20Initializable.sol\":9264:9287  _balances[to] += amount */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"src/ERC20Initializable.sol\":8882:9312  if (to == address(0)) {... */\n    tag_170:\n        /* \"src/ERC20Initializable.sol\":9342:9344  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20Initializable.sol\":9327:9353  Transfer(from, to, amount) */\n      and\n        /* \"src/ERC20Initializable.sol\":9336:9340  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC20Initializable.sol\":9327:9353  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"src/ERC20Initializable.sol\":9346:9352  amount */\n      dup4\n        /* \"src/ERC20Initializable.sol\":9327:9353  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_139\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_19:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_180:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_180)\n    tag_182:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_172:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_184:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_22:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_186:\n        /* \"#utility.yul\":913:942   */\n      tag_187\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_172\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_32:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_191:\n        /* \"#utility.yul\":1563:1592   */\n      tag_192\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_172\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_193\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_172\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_45:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_196:\n        /* \"#utility.yul\":2051:2080   */\n      tag_197\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_172\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2218   */\n    tag_173:\n        /* \"#utility.yul\":2152:2162   */\n      0x4e487b71\n        /* \"#utility.yul\":2147:2150   */\n      0xe0\n        /* \"#utility.yul\":2143:2163   */\n      shl\n        /* \"#utility.yul\":2140:2141   */\n      0x00\n        /* \"#utility.yul\":2133:2164   */\n      mstore\n        /* \"#utility.yul\":2183:2187   */\n      0x41\n        /* \"#utility.yul\":2180:2181   */\n      0x04\n        /* \"#utility.yul\":2173:2188   */\n      mstore\n        /* \"#utility.yul\":2207:2211   */\n      0x24\n        /* \"#utility.yul\":2204:2205   */\n      0x00\n        /* \"#utility.yul\":2197:2212   */\n      revert\n        /* \"#utility.yul\":2223:2942   */\n    tag_174:\n        /* \"#utility.yul\":2266:2271   */\n      0x00\n        /* \"#utility.yul\":2319:2322   */\n      dup3\n        /* \"#utility.yul\":2312:2316   */\n      0x1f\n        /* \"#utility.yul\":2304:2310   */\n      dup4\n        /* \"#utility.yul\":2300:2317   */\n      add\n        /* \"#utility.yul\":2296:2323   */\n      slt\n        /* \"#utility.yul\":2286:2341   */\n      tag_200\n      jumpi\n        /* \"#utility.yul\":2337:2338   */\n      0x00\n        /* \"#utility.yul\":2334:2335   */\n      dup1\n        /* \"#utility.yul\":2327:2339   */\n      revert\n        /* \"#utility.yul\":2286:2341   */\n    tag_200:\n        /* \"#utility.yul\":2373:2379   */\n      dup2\n        /* \"#utility.yul\":2360:2380   */\n      calldataload\n        /* \"#utility.yul\":2399:2417   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2436:2438   */\n      dup1\n        /* \"#utility.yul\":2432:2434   */\n      dup3\n        /* \"#utility.yul\":2429:2439   */\n      gt\n        /* \"#utility.yul\":2426:2462   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":2442:2460   */\n      tag_202\n      tag_173\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2517:2519   */\n      0x40\n        /* \"#utility.yul\":2511:2520   */\n      mload\n        /* \"#utility.yul\":2485:2487   */\n      0x1f\n        /* \"#utility.yul\":2571:2584   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2567:2589   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2591:2593   */\n      0x3f\n        /* \"#utility.yul\":2563:2594   */\n      add\n        /* \"#utility.yul\":2559:2599   */\n      and\n        /* \"#utility.yul\":2547:2600   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2615:2633   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":2635:2657   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2612:2658   */\n      or\n        /* \"#utility.yul\":2609:2681   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":2661:2679   */\n      tag_204\n      tag_173\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2701:2711   */\n      dup2\n        /* \"#utility.yul\":2697:2699   */\n      0x40\n        /* \"#utility.yul\":2690:2712   */\n      mstore\n        /* \"#utility.yul\":2736:2738   */\n      dup4\n        /* \"#utility.yul\":2728:2734   */\n      dup2\n        /* \"#utility.yul\":2721:2739   */\n      mstore\n        /* \"#utility.yul\":2782:2785   */\n      dup7\n        /* \"#utility.yul\":2775:2779   */\n      0x20\n        /* \"#utility.yul\":2770:2772   */\n      dup6\n        /* \"#utility.yul\":2762:2768   */\n      dup9\n        /* \"#utility.yul\":2758:2773   */\n      add\n        /* \"#utility.yul\":2754:2780   */\n      add\n        /* \"#utility.yul\":2751:2786   */\n      gt\n        /* \"#utility.yul\":2748:2803   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2799:2800   */\n      0x00\n        /* \"#utility.yul\":2796:2797   */\n      dup1\n        /* \"#utility.yul\":2789:2801   */\n      revert\n        /* \"#utility.yul\":2748:2803   */\n    tag_205:\n        /* \"#utility.yul\":2863:2865   */\n      dup4\n        /* \"#utility.yul\":2856:2860   */\n      0x20\n        /* \"#utility.yul\":2848:2854   */\n      dup8\n        /* \"#utility.yul\":2844:2861   */\n      add\n        /* \"#utility.yul\":2837:2841   */\n      0x20\n        /* \"#utility.yul\":2829:2835   */\n      dup4\n        /* \"#utility.yul\":2825:2842   */\n      add\n        /* \"#utility.yul\":2812:2866   */\n      calldatacopy\n        /* \"#utility.yul\":2910:2911   */\n      0x00\n        /* \"#utility.yul\":2903:2907   */\n      0x20\n        /* \"#utility.yul\":2898:2900   */\n      dup6\n        /* \"#utility.yul\":2890:2896   */\n      dup4\n        /* \"#utility.yul\":2886:2901   */\n      add\n        /* \"#utility.yul\":2882:2908   */\n      add\n        /* \"#utility.yul\":2875:2912   */\n      mstore\n        /* \"#utility.yul\":2930:2936   */\n      dup1\n        /* \"#utility.yul\":2921:2936   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2223:2942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2947:3564   */\n    tag_50:\n        /* \"#utility.yul\":3044:3050   */\n      0x00\n        /* \"#utility.yul\":3052:3058   */\n      dup1\n        /* \"#utility.yul\":3060:3066   */\n      0x00\n        /* \"#utility.yul\":3113:3115   */\n      0x60\n        /* \"#utility.yul\":3101:3110   */\n      dup5\n        /* \"#utility.yul\":3092:3099   */\n      dup7\n        /* \"#utility.yul\":3088:3111   */\n      sub\n        /* \"#utility.yul\":3084:3116   */\n      slt\n        /* \"#utility.yul\":3081:3133   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":3129:3130   */\n      0x00\n        /* \"#utility.yul\":3126:3127   */\n      dup1\n        /* \"#utility.yul\":3119:3131   */\n      revert\n        /* \"#utility.yul\":3081:3133   */\n    tag_207:\n        /* \"#utility.yul\":3152:3181   */\n      tag_208\n        /* \"#utility.yul\":3171:3180   */\n      dup5\n        /* \"#utility.yul\":3152:3181   */\n      tag_172\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3142:3181   */\n      swap3\n      pop\n        /* \"#utility.yul\":3232:3234   */\n      0x20\n        /* \"#utility.yul\":3221:3230   */\n      dup5\n        /* \"#utility.yul\":3217:3235   */\n      add\n        /* \"#utility.yul\":3204:3236   */\n      calldataload\n        /* \"#utility.yul\":3255:3273   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3296:3298   */\n      dup1\n        /* \"#utility.yul\":3288:3294   */\n      dup3\n        /* \"#utility.yul\":3285:3299   */\n      gt\n        /* \"#utility.yul\":3282:3316   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":3312:3313   */\n      0x00\n        /* \"#utility.yul\":3309:3310   */\n      dup1\n        /* \"#utility.yul\":3302:3314   */\n      revert\n        /* \"#utility.yul\":3282:3316   */\n    tag_209:\n        /* \"#utility.yul\":3335:3385   */\n      tag_210\n        /* \"#utility.yul\":3377:3384   */\n      dup8\n        /* \"#utility.yul\":3368:3374   */\n      dup4\n        /* \"#utility.yul\":3357:3366   */\n      dup9\n        /* \"#utility.yul\":3353:3375   */\n      add\n        /* \"#utility.yul\":3335:3385   */\n      tag_174\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3325:3385   */\n      swap4\n      pop\n        /* \"#utility.yul\":3438:3440   */\n      0x40\n        /* \"#utility.yul\":3427:3436   */\n      dup7\n        /* \"#utility.yul\":3423:3441   */\n      add\n        /* \"#utility.yul\":3410:3442   */\n      calldataload\n        /* \"#utility.yul\":3394:3442   */\n      swap2\n      pop\n        /* \"#utility.yul\":3467:3469   */\n      dup1\n        /* \"#utility.yul\":3457:3465   */\n      dup3\n        /* \"#utility.yul\":3454:3470   */\n      gt\n        /* \"#utility.yul\":3451:3487   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":3483:3484   */\n      0x00\n        /* \"#utility.yul\":3480:3481   */\n      dup1\n        /* \"#utility.yul\":3473:3485   */\n      revert\n        /* \"#utility.yul\":3451:3487   */\n    tag_211:\n      pop\n        /* \"#utility.yul\":3506:3558   */\n      tag_212\n        /* \"#utility.yul\":3550:3557   */\n      dup7\n        /* \"#utility.yul\":3539:3547   */\n      dup3\n        /* \"#utility.yul\":3528:3537   */\n      dup8\n        /* \"#utility.yul\":3524:3548   */\n      add\n        /* \"#utility.yul\":3506:3558   */\n      tag_174\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3496:3558   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2947:3564   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3569:3829   */\n    tag_65:\n        /* \"#utility.yul\":3637:3643   */\n      0x00\n        /* \"#utility.yul\":3645:3651   */\n      dup1\n        /* \"#utility.yul\":3698:3700   */\n      0x40\n        /* \"#utility.yul\":3686:3695   */\n      dup4\n        /* \"#utility.yul\":3677:3684   */\n      dup6\n        /* \"#utility.yul\":3673:3696   */\n      sub\n        /* \"#utility.yul\":3669:3701   */\n      slt\n        /* \"#utility.yul\":3666:3718   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":3714:3715   */\n      0x00\n        /* \"#utility.yul\":3711:3712   */\n      dup1\n        /* \"#utility.yul\":3704:3716   */\n      revert\n        /* \"#utility.yul\":3666:3718   */\n    tag_214:\n        /* \"#utility.yul\":3737:3766   */\n      tag_215\n        /* \"#utility.yul\":3756:3765   */\n      dup4\n        /* \"#utility.yul\":3737:3766   */\n      tag_172\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3727:3766   */\n      swap2\n      pop\n        /* \"#utility.yul\":3785:3823   */\n      tag_216\n        /* \"#utility.yul\":3819:3821   */\n      0x20\n        /* \"#utility.yul\":3808:3817   */\n      dup5\n        /* \"#utility.yul\":3804:3822   */\n      add\n        /* \"#utility.yul\":3785:3823   */\n      tag_172\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":3775:3823   */\n      swap1\n      pop\n        /* \"#utility.yul\":3569:3829   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3834:4214   */\n    tag_70:\n        /* \"#utility.yul\":3913:3914   */\n      0x01\n        /* \"#utility.yul\":3909:3921   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3956:3968   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3977:4038   */\n      tag_218\n      jumpi\n        /* \"#utility.yul\":4031:4035   */\n      0x7f\n        /* \"#utility.yul\":4023:4029   */\n      dup3\n        /* \"#utility.yul\":4019:4036   */\n      and\n        /* \"#utility.yul\":4009:4036   */\n      swap2\n      pop\n        /* \"#utility.yul\":3977:4038   */\n    tag_218:\n        /* \"#utility.yul\":4084:4086   */\n      0x20\n        /* \"#utility.yul\":4076:4082   */\n      dup3\n        /* \"#utility.yul\":4073:4087   */\n      lt\n        /* \"#utility.yul\":4053:4071   */\n      dup2\n        /* \"#utility.yul\":4050:4088   */\n      sub\n        /* \"#utility.yul\":4047:4208   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":4130:4140   */\n      0x4e487b71\n        /* \"#utility.yul\":4125:4128   */\n      0xe0\n        /* \"#utility.yul\":4121:4141   */\n      shl\n        /* \"#utility.yul\":4118:4119   */\n      0x00\n        /* \"#utility.yul\":4111:4142   */\n      mstore\n        /* \"#utility.yul\":4165:4169   */\n      0x22\n        /* \"#utility.yul\":4162:4163   */\n      0x04\n        /* \"#utility.yul\":4155:4170   */\n      mstore\n        /* \"#utility.yul\":4193:4197   */\n      0x24\n        /* \"#utility.yul\":4190:4191   */\n      0x00\n        /* \"#utility.yul\":4183:4198   */\n      revert\n        /* \"#utility.yul\":4047:4208   */\n    tag_219:\n      pop\n        /* \"#utility.yul\":3834:4214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4219:4441   */\n    tag_93:\n        /* \"#utility.yul\":4284:4293   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4305:4315   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4302:4435   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":4357:4367   */\n      0x4e487b71\n        /* \"#utility.yul\":4352:4355   */\n      0xe0\n        /* \"#utility.yul\":4348:4368   */\n      shl\n        /* \"#utility.yul\":4345:4346   */\n      0x00\n        /* \"#utility.yul\":4338:4369   */\n      mstore\n        /* \"#utility.yul\":4392:4396   */\n      0x11\n        /* \"#utility.yul\":4389:4390   */\n      0x04\n        /* \"#utility.yul\":4382:4397   */\n      mstore\n        /* \"#utility.yul\":4420:4424   */\n      0x24\n        /* \"#utility.yul\":4417:4418   */\n      0x00\n        /* \"#utility.yul\":4410:4425   */\n      revert\n        /* \"#utility.yul\":4987:5532   */\n    tag_176:\n        /* \"#utility.yul\":5089:5091   */\n      0x1f\n        /* \"#utility.yul\":5084:5087   */\n      dup3\n        /* \"#utility.yul\":5081:5092   */\n      gt\n        /* \"#utility.yul\":5078:5526   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":5125:5126   */\n      0x00\n        /* \"#utility.yul\":5150:5155   */\n      dup2\n        /* \"#utility.yul\":5146:5148   */\n      dup2\n        /* \"#utility.yul\":5139:5156   */\n      mstore\n        /* \"#utility.yul\":5195:5199   */\n      0x20\n        /* \"#utility.yul\":5191:5193   */\n      dup2\n        /* \"#utility.yul\":5181:5200   */\n      keccak256\n        /* \"#utility.yul\":5265:5267   */\n      0x1f\n        /* \"#utility.yul\":5253:5263   */\n      dup6\n        /* \"#utility.yul\":5249:5268   */\n      add\n        /* \"#utility.yul\":5246:5247   */\n      0x05\n        /* \"#utility.yul\":5242:5269   */\n      shr\n        /* \"#utility.yul\":5236:5240   */\n      dup2\n        /* \"#utility.yul\":5232:5270   */\n      add\n        /* \"#utility.yul\":5301:5305   */\n      0x20\n        /* \"#utility.yul\":5289:5299   */\n      dup7\n        /* \"#utility.yul\":5286:5306   */\n      lt\n        /* \"#utility.yul\":5283:5330   */\n      iszero\n      tag_226\n      jumpi\n      pop\n        /* \"#utility.yul\":5324:5328   */\n      dup1\n        /* \"#utility.yul\":5283:5330   */\n    tag_226:\n        /* \"#utility.yul\":5379:5381   */\n      0x1f\n        /* \"#utility.yul\":5374:5377   */\n      dup6\n        /* \"#utility.yul\":5370:5382   */\n      add\n        /* \"#utility.yul\":5367:5368   */\n      0x05\n        /* \"#utility.yul\":5363:5383   */\n      shr\n        /* \"#utility.yul\":5357:5361   */\n      dup3\n        /* \"#utility.yul\":5353:5384   */\n      add\n        /* \"#utility.yul\":5343:5384   */\n      swap2\n      pop\n        /* \"#utility.yul\":5434:5516   */\n    tag_227:\n        /* \"#utility.yul\":5452:5454   */\n      dup2\n        /* \"#utility.yul\":5445:5450   */\n      dup2\n        /* \"#utility.yul\":5442:5455   */\n      lt\n        /* \"#utility.yul\":5434:5516   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":5497:5514   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":5478:5479   */\n      0x01\n        /* \"#utility.yul\":5467:5480   */\n      add\n        /* \"#utility.yul\":5434:5516   */\n      jump(tag_227)\n    tag_229:\n        /* \"#utility.yul\":5438:5441   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4987:5532   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5708:7060   */\n    tag_109:\n        /* \"#utility.yul\":5834:5837   */\n      dup2\n        /* \"#utility.yul\":5828:5838   */\n      mload\n        /* \"#utility.yul\":5861:5879   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5853:5859   */\n      dup2\n        /* \"#utility.yul\":5850:5880   */\n      gt\n        /* \"#utility.yul\":5847:5903   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":5883:5901   */\n      tag_233\n      tag_173\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":5912:6009   */\n      tag_234\n        /* \"#utility.yul\":6002:6008   */\n      dup2\n        /* \"#utility.yul\":5962:6000   */\n      tag_235\n        /* \"#utility.yul\":5994:5998   */\n      dup5\n        /* \"#utility.yul\":5988:5999   */\n      sload\n        /* \"#utility.yul\":5962:6000   */\n      tag_70\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5956:5960   */\n      dup5\n        /* \"#utility.yul\":5912:6009   */\n      tag_176\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6064:6068   */\n      0x20\n      dup1\n        /* \"#utility.yul\":6128:6130   */\n      0x1f\n        /* \"#utility.yul\":6117:6131   */\n      dup4\n      gt\n        /* \"#utility.yul\":6145:6146   */\n      0x01\n        /* \"#utility.yul\":6140:6803   */\n      dup2\n      eq\n      tag_237\n      jumpi\n        /* \"#utility.yul\":6847:6848   */\n      0x00\n        /* \"#utility.yul\":6864:6870   */\n      dup5\n        /* \"#utility.yul\":6861:6950   */\n      iszero\n      tag_238\n      jumpi\n      pop\n        /* \"#utility.yul\":6916:6935   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":6910:6936   */\n      mload\n        /* \"#utility.yul\":6861:6950   */\n    tag_238:\n      not(0x00)\n        /* \"#utility.yul\":5665:5666   */\n      0x03\n        /* \"#utility.yul\":5661:5672   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":5657:5681   */\n      shr\n        /* \"#utility.yul\":5653:5682   */\n      not\n        /* \"#utility.yul\":5643:5683   */\n      and\n        /* \"#utility.yul\":5689:5690   */\n      0x01\n        /* \"#utility.yul\":5685:5696   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":5640:5697   */\n      or\n        /* \"#utility.yul\":6963:7044   */\n      dup6\n      sstore\n        /* \"#utility.yul\":6110:7054   */\n      jump(tag_229)\n        /* \"#utility.yul\":6140:6803   */\n    tag_237:\n        /* \"#utility.yul\":4934:4935   */\n      0x00\n        /* \"#utility.yul\":4927:4941   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":4971:4975   */\n      0x20\n        /* \"#utility.yul\":4958:4976   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":6176:6196   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":6294:6530   */\n    tag_241:\n        /* \"#utility.yul\":6308:6315   */\n      dup3\n        /* \"#utility.yul\":6305:6306   */\n      dup2\n        /* \"#utility.yul\":6302:6316   */\n      lt\n        /* \"#utility.yul\":6294:6530   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":6397:6416   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":6391:6417   */\n      mload\n        /* \"#utility.yul\":6376:6418   */\n      dup3\n      sstore\n        /* \"#utility.yul\":6489:6516   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":6457:6458   */\n      0x01\n        /* \"#utility.yul\":6445:6459   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":6324:6343   */\n      dup5\n      add\n        /* \"#utility.yul\":6294:6530   */\n      jump(tag_241)\n    tag_243:\n        /* \"#utility.yul\":6298:6301   */\n      pop\n        /* \"#utility.yul\":6558:6564   */\n      dup6\n        /* \"#utility.yul\":6549:6556   */\n      dup3\n        /* \"#utility.yul\":6546:6565   */\n      lt\n        /* \"#utility.yul\":6543:6744   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":6619:6638   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":6613:6639   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":6702:6703   */\n      0x03\n        /* \"#utility.yul\":6698:6712   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":6714:6717   */\n      0xf8\n        /* \"#utility.yul\":6694:6718   */\n      and\n        /* \"#utility.yul\":6690:6727   */\n      shr\n        /* \"#utility.yul\":6686:6728   */\n      not\n        /* \"#utility.yul\":6671:6729   */\n      and\n        /* \"#utility.yul\":6656:6730   */\n      dup2\n      sstore\n        /* \"#utility.yul\":6543:6744   */\n    tag_244:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6790:6791   */\n      0x01\n        /* \"#utility.yul\":6774:6788   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":6770:6792   */\n      add\n        /* \"#utility.yul\":6757:6793   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":5708:7060   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f660a98cd36cfa4af05644371c14c1ad2f80c39acd6c84c3d58f53fc6a4675ab64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610ca8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a0823114610141578063906571471461016a57806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce91906108cd565b60405180910390f35b6100ea6100e5366004610937565b610252565b60405190151581526020016100ce565b6003545b6040519081526020016100ce565b6100ea61011a366004610961565b61026c565b604051601281526020016100ce565b6100ea61013c366004610937565b610290565b6100fe61014f36600461099d565b6001600160a01b031660009081526001602052604090205490565b61017d610178366004610a62565b6102b2565b005b6100c16103f3565b6100ea610195366004610937565b610402565b6100ea6101a8366004610937565b61047d565b6100fe6101bb366004610ad6565b61048b565b6060600480546101cf90610b09565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610b09565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b6000336102608185856104b6565b60019150505b92915050565b60003361027a8582856105db565b61028585858561064f565b506001949350505050565b6000336102608185856102a3838361048b565b6102ad9190610b43565b6104b6565b600054610100900460ff16158080156102d25750600054600160ff909116105b806102ec5750303b1580156102ec575060005460ff166001145b6103545760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610377576000805461ff0019166101001790555b61038d846b033b2e3c9fd0803ce8000000610725565b60046103998482610bb2565b5060056103a68382610bb2565b5080156103ed576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6060600580546101cf90610b09565b60003381610410828661048b565b9050838110156104705760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161034b565b61028582868684036104b6565b60003361026081858561064f565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6001600160a01b0383166105185760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161034b565b6001600160a01b0382166105795760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161034b565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105e7848461048b565b905060001981146103ed57818110156106425760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161034b565b6103ed84848484036104b6565b6001600160a01b0383166106b35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161034b565b6001600160a01b0382166107155760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161034b565b61072083838361078b565b505050565b6001600160a01b03821661077b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161034b565b6107876000838361078b565b5050565b6001600160a01b0383166107b65780600360008282546107ab9190610b43565b9091555061084d9050565b6001600160a01b0383166000908152600160205260409020548181101561082e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161034b565b6001600160a01b03841660009081526001602052604090209082900390555b6001600160a01b03821661086957600380548290039055610888565b6001600160a01b03821660009081526001602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105ce91815260200190565b600060208083528351808285015260005b818110156108fa578581018301518582016040015282016108de565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461093257600080fd5b919050565b6000806040838503121561094a57600080fd5b6109538361091b565b946020939093013593505050565b60008060006060848603121561097657600080fd5b61097f8461091b565b925061098d6020850161091b565b9150604084013590509250925092565b6000602082840312156109af57600080fd5b6109b88261091b565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109e657600080fd5b813567ffffffffffffffff80821115610a0157610a016109bf565b604051601f8301601f19908116603f01168101908282118183101715610a2957610a296109bf565b81604052838152866020858801011115610a4257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610a7757600080fd5b610a808461091b565b9250602084013567ffffffffffffffff80821115610a9d57600080fd5b610aa9878388016109d5565b93506040860135915080821115610abf57600080fd5b50610acc868287016109d5565b9150509250925092565b60008060408385031215610ae957600080fd5b610af28361091b565b9150610b006020840161091b565b90509250929050565b600181811c90821680610b1d57607f821691505b602082108103610b3d57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026657634e487b7160e01b600052601160045260246000fd5b601f82111561072057600081815260208120601f850160051c81016020861015610b8b5750805b601f850160051c820191505b81811015610baa57828155600101610b97565b505050505050565b815167ffffffffffffffff811115610bcc57610bcc6109bf565b610be081610bda8454610b09565b84610b64565b602080601f831160018114610c155760008415610bfd5750858301515b600019600386901b1c1916600185901b178555610baa565b600085815260208120601f198616915b82811015610c4457888601518255948401946001909101908401610c25565b5085821015610c625787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220f660a98cd36cfa4af05644371c14c1ad2f80c39acd6c84c3d58f53fc6a4675ab64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCA8 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x90657147 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x12E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0xA62 JUMP JUMPDEST PUSH2 0x2B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST PUSH2 0xFE PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xAD6 JUMP JUMPDEST PUSH2 0x48B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0xB09 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FB SWAP1 PUSH2 0xB09 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x248 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x248 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x27A DUP6 DUP3 DUP6 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x285 DUP6 DUP6 DUP6 PUSH2 0x64F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x2A3 DUP4 DUP4 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0xB43 JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x2D2 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x2EC JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EC JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x38D DUP5 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x399 DUP5 DUP3 PUSH2 0xBB2 JUMP JUMPDEST POP PUSH1 0x5 PUSH2 0x3A6 DUP4 DUP3 PUSH2 0xBB2 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x410 DUP3 DUP7 PUSH2 0x48B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x285 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E7 DUP5 DUP5 PUSH2 0x48B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x3ED JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x3ED DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x720 DUP4 DUP4 DUP4 PUSH2 0x78B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x787 PUSH1 0x0 DUP4 DUP4 PUSH2 0x78B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7B6 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0xB43 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x84D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x82E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x869 JUMPI PUSH1 0x3 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x888 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5CE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8FA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8DE JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x94A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x953 DUP4 PUSH2 0x91B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97F DUP5 PUSH2 0x91B JUMP JUMPDEST SWAP3 POP PUSH2 0x98D PUSH1 0x20 DUP6 ADD PUSH2 0x91B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B8 DUP3 PUSH2 0x91B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA01 JUMPI PUSH2 0xA01 PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xA29 JUMPI PUSH2 0xA29 PUSH2 0x9BF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xA42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA80 DUP5 PUSH2 0x91B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA9 DUP8 DUP4 DUP9 ADD PUSH2 0x9D5 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xACC DUP7 DUP3 DUP8 ADD PUSH2 0x9D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAF2 DUP4 PUSH2 0x91B JUMP JUMPDEST SWAP2 POP PUSH2 0xB00 PUSH1 0x20 DUP5 ADD PUSH2 0x91B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB1D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB3D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xB8B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBAA JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB97 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBCC JUMPI PUSH2 0xBCC PUSH2 0x9BF JUMP JUMPDEST PUSH2 0xBE0 DUP2 PUSH2 0xBDA DUP5 SLOAD PUSH2 0xB09 JUMP JUMPDEST DUP5 PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xC15 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xBFD JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC44 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xC25 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xC62 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 PUSH1 0xA9 DUP13 0xD3 PUSH13 0xFA4AF05644371C14C1AD2F80C3 SWAP11 0xCD PUSH13 0x84C3D58F53FC6A4675AB64736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "1625:10316:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1109": {
									"entryPoint": 1206,
									"id": 1109,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_1036": {
									"entryPoint": 1829,
									"id": 1036,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_613": {
									"entryPoint": null,
									"id": 613,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1152": {
									"entryPoint": 1499,
									"id": 1152,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_935": {
									"entryPoint": 1615,
									"id": 935,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1008": {
									"entryPoint": 1931,
									"id": 1008,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_772": {
									"entryPoint": 1163,
									"id": 772,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_796": {
									"entryPoint": 594,
									"id": 796,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_731": {
									"entryPoint": null,
									"id": 731,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_709": {
									"entryPoint": null,
									"id": 709,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_898": {
									"entryPoint": 1026,
									"id": 898,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_857": {
									"entryPoint": 656,
									"id": 857,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_682": {
									"entryPoint": 690,
									"id": 682,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isContract_289": {
									"entryPoint": null,
									"id": 289,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_691": {
									"entryPoint": 448,
									"id": 691,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_700": {
									"entryPoint": 1011,
									"id": 700,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_718": {
									"entryPoint": null,
									"id": 718,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_828": {
									"entryPoint": 620,
									"id": 828,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_755": {
									"entryPoint": 1149,
									"id": 755,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 2517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 2658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 2916,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 2825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2495,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10410:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:6",
																"statements": []
															},
															"src": "294:140:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:6"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:548:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:6"
															},
															"nodeType": "YulIf",
															"src": "664:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:6",
														"type": ""
													}
												],
												"src": "567:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:6"
															},
															"nodeType": "YulIf",
															"src": "842:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:6",
														"type": ""
													}
												],
												"src": "745:254:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:6",
														"type": ""
													}
												],
												"src": "1004:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:6",
														"type": ""
													}
												],
												"src": "1196:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:6"
															},
															"nodeType": "YulIf",
															"src": "1492:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:6",
														"type": ""
													}
												],
												"src": "1378:328:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:6",
														"type": ""
													}
												],
												"src": "1711:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:6"
															},
															"nodeType": "YulIf",
															"src": "1980:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:6",
														"type": ""
													}
												],
												"src": "1900:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2123:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2140:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2147:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2152:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2133:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2133:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2183:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2173:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2204:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2207:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2197:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2197:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2197:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2091:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:666:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2325:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2334:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2337:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2327:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2327:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2327:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2304:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2312:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2300:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2300:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2319:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2296:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2289:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:35:6"
															},
															"nodeType": "YulIf",
															"src": "2286:55:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2350:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2373:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2360:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2360:20:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2354:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2389:28:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2399:18:6",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2393:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2440:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2442:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2442:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2442:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2432:2:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2436:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2429:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:10:6"
															},
															"nodeType": "YulIf",
															"src": "2426:36:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2471:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2485:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2481:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2481:7:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2475:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2497:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2517:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2511:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2511:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2501:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2529:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2551:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "2575:2:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2579:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2571:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2571:13:6"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "2586:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2567:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2567:22:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2591:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2563:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2563:31:6"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2596:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2559:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2559:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2547:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2547:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2533:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2659:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2661:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2661:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2661:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2618:10:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2630:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2615:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2615:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2638:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2650:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2635:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2635:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2612:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:46:6"
															},
															"nodeType": "YulIf",
															"src": "2609:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2697:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2701:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2690:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2690:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2728:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2736:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2721:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2721:18:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2787:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2796:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2799:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2789:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2789:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2789:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2762:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2770:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2758:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2758:15:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2754:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2754:26:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2782:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2751:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:35:6"
															},
															"nodeType": "YulIf",
															"src": "2748:55:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2829:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2825:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2825:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2848:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2856:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2844:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2844:17:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2863:2:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2812:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2812:54:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2812:54:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2890:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2898:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2886:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2886:15:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2903:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2882:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2882:26:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2910:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2875:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2875:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2875:37:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2921:15:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2930:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2921:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2250:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2258:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2266:5:6",
														"type": ""
													}
												],
												"src": "2223:719:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3071:493:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3117:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3126:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3129:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3119:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3119:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3092:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3101:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3088:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3088:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3113:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3084:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3084:32:6"
															},
															"nodeType": "YulIf",
															"src": "3081:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3142:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3171:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3152:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3142:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3190:46:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3221:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3232:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3217:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3217:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3204:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:32:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3194:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3245:28:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3255:18:6",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3249:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3300:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3309:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3312:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3302:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3302:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3302:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3288:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3296:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3285:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3285:14:6"
															},
															"nodeType": "YulIf",
															"src": "3282:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3325:60:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3357:9:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3368:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3353:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3353:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3377:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3335:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3335:50:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3325:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3394:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3427:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3438:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3423:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3423:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3410:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3410:32:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3398:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3471:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3480:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3483:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3473:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3473:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3473:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3457:8:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3467:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3454:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3454:16:6"
															},
															"nodeType": "YulIf",
															"src": "3451:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3496:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3528:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3539:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3524:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3524:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3550:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3506:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:52:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3496:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3021:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3032:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3044:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3052:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3060:6:6",
														"type": ""
													}
												],
												"src": "2947:617:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3656:173:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3702:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3711:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3714:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3704:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3704:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3704:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3677:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3686:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3673:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3673:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3698:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3669:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3669:32:6"
															},
															"nodeType": "YulIf",
															"src": "3666:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3727:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3756:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3737:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3737:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3727:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3775:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3808:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3819:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3804:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3804:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3785:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3785:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3775:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3614:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3625:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3637:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3645:6:6",
														"type": ""
													}
												],
												"src": "3569:260:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3889:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3899:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3913:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3916:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3909:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3909:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3899:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3930:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3960:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3966:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3956:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3956:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3934:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4007:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4009:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4023:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4031:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4019:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4019:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4009:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3987:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3980:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3980:26:6"
															},
															"nodeType": "YulIf",
															"src": "3977:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4097:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4118:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4125:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4130:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4121:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4121:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4111:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4111:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4111:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4162:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4165:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4155:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4155:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4155:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4190:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4193:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4183:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4183:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4183:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4053:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4076:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4084:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4073:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4073:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4050:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4050:38:6"
															},
															"nodeType": "YulIf",
															"src": "4047:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3869:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3878:6:6",
														"type": ""
													}
												],
												"src": "3834:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4267:174:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4277:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4288:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4291:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4284:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4284:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4277:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4324:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4345:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4352:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4357:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4348:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4348:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4338:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4338:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4338:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4389:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4392:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4382:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4382:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4382:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4417:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4420:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4410:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4410:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4410:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4308:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4311:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4305:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4305:10:6"
															},
															"nodeType": "YulIf",
															"src": "4302:133:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4250:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4253:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4259:3:6",
														"type": ""
													}
												],
												"src": "4219:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4620:236:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4637:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4648:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4630:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4630:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4630:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4671:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4682:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4667:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4667:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4687:2:6",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4660:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4660:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4660:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4710:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4721:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4706:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4706:18:6"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4726:34:6",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4699:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4699:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4699:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4781:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4792:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4777:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4777:18:6"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4797:16:6",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4770:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4770:44:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4770:44:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4823:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4835:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4846:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4831:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4831:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4823:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4597:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4611:4:6",
														"type": ""
													}
												],
												"src": "4446:410:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4917:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4934:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4937:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4927:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4927:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4927:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4950:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4968:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4971:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4958:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4958:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4950:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4900:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4908:4:6",
														"type": ""
													}
												],
												"src": "4861:121:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5068:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5101:425:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5115:11:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5125:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "5119:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5146:2:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "5150:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5139:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5139:17:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5139:17:6"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5169:31:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5191:2:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5195:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "5181:9:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5181:19:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "5173:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5213:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "5236:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5246:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "5253:10:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5265:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5249:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5249:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "5242:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5242:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5232:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5232:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "5217:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5307:23:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5309:19:6",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "5324:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "5309:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "5289:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5301:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "5286:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5286:20:6"
																		},
																		"nodeType": "YulIf",
																		"src": "5283:47:6"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5343:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "5357:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5367:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "5374:3:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5379:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5370:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5370:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "5363:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5363:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5353:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5353:31:6"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "5347:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5397:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "5410:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "5401:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5495:21:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "5504:5:6"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "5511:2:6"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "5497:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5497:17:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5497:17:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5445:5:6"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "5452:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "5442:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5442:13:6"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "5456:26:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5458:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "5471:5:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5478:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5467:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5467:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "5458:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "5438:3:6",
																			"statements": []
																		},
																		"src": "5434:82:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5084:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5089:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5081:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5081:11:6"
															},
															"nodeType": "YulIf",
															"src": "5078:448:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5040:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5047:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "5052:10:6",
														"type": ""
													}
												],
												"src": "4987:545:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5622:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5632:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "5647:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5665:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "5668:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "5661:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5661:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5678:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "5674:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5674:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "5657:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5657:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "5653:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5653:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5643:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5643:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5689:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5692:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5685:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5685:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5640:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "5632:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5599:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5605:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "5613:4:6",
														"type": ""
													}
												],
												"src": "5537:166:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5804:1256:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5814:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5834:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5828:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5828:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5818:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5881:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5883:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5883:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5883:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5853:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5861:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5850:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5850:30:6"
															},
															"nodeType": "YulIf",
															"src": "5847:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5956:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5994:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5988:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5988:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "5962:25:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5962:38:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "6002:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5912:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5912:97:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5912:97:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6018:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6035:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "6022:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6045:23:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6064:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "6049:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6077:24:6",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "6090:11:6"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "6077:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6147:656:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6161:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "6180:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6192:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "6188:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6188:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "6176:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6176:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "6165:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6253:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "6223:29:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6223:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "6213:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6271:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6280:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "6275:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6358:172:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6383:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "6401:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "6406:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "6397:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6397:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "6391:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6391:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6376:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6376:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6376:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6435:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6449:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6457:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6445:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6445:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6435:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6476:40:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "6493:9:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "6504:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6489:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6489:27:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "6476:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6305:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6308:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6302:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6302:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "6317:28:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6319:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "6328:1:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "6331:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6324:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6324:19:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6319:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "6298:3:6",
																					"statements": []
																				},
																				"src": "6294:236:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6578:166:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "6596:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6623:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6628:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6619:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6619:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6613:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6613:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "6600:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6663:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6675:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "6702:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "6705:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "6698:3:6"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "6698:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "6714:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "6694:3:6"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "6694:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "6724:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "6720:3:6"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "6720:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "6690:3:6"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "6690:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "6686:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6686:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "6671:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6671:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6656:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6656:74:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6656:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6549:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "6558:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6546:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6546:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "6543:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6764:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6778:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6781:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "6774:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6774:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6790:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6770:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6770:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6757:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6757:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6757:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6140:663:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6145:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6820:234:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6834:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6847:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6838:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6883:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6901:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6920:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6925:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6916:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6916:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6910:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6910:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6901:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6864:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "6861:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6970:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "7029:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "7036:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6976:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6976:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6963:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6963:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6963:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6812:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "6120:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6128:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6117:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6117:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "6110:944:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5789:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5795:3:6",
														"type": ""
													}
												],
												"src": "5708:1352:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7172:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7182:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7194:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7205:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7190:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7190:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7182:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7224:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7239:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7247:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7235:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7235:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7217:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7217:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7217:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7141:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7152:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7163:4:6",
														"type": ""
													}
												],
												"src": "7065:194:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7438:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7455:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7466:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7448:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7448:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7448:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7489:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7500:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7485:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7485:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7505:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7478:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7478:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7478:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7528:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7539:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7524:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7524:18:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7544:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7517:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7517:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7517:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7599:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7610:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7595:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7595:18:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7615:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7588:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7588:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7588:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7632:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7644:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7655:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7640:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7640:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7632:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7415:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7429:4:6",
														"type": ""
													}
												],
												"src": "7264:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7844:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7861:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7872:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7854:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7854:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7854:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7895:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7906:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7891:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7891:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7911:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7884:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7884:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7884:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7934:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7945:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7930:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7930:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7950:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7923:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7923:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7923:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8005:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8016:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8001:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8001:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8021:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7994:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7994:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7994:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8037:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8049:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8060:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8045:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8045:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8037:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7821:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7835:4:6",
														"type": ""
													}
												],
												"src": "7670:400:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8249:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8266:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8277:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8259:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8259:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8259:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8300:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8311:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8296:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8296:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8316:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8289:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8289:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8289:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8339:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8350:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8335:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8335:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8355:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8328:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8328:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8328:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8410:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8421:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8406:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8406:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8426:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8399:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8399:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8399:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8440:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8452:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8463:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8448:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8448:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8440:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8226:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8240:4:6",
														"type": ""
													}
												],
												"src": "8075:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8652:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8669:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8680:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8662:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8662:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8662:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8703:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8714:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8699:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8699:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8719:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8692:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8692:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8692:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8742:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8753:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8738:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8738:18:6"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8758:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8731:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8731:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8731:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8799:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8811:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8822:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8807:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8807:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8799:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8629:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8643:4:6",
														"type": ""
													}
												],
												"src": "8478:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9010:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9027:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9038:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9020:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9020:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9020:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9061:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9072:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9057:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9057:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9077:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9050:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9050:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9050:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9100:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9111:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9096:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9096:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9116:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9089:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9089:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9089:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9171:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9182:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9167:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9167:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9187:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9160:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9160:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9204:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9216:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9227:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9212:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9212:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9204:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8987:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9001:4:6",
														"type": ""
													}
												],
												"src": "8836:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9416:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9433:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9444:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9426:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9426:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9426:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9467:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9478:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9463:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9463:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9483:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9456:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9456:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9506:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9517:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9502:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9502:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9522:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9495:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9495:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9495:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9577:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9588:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9573:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9573:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9593:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9566:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9566:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9566:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9608:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9620:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9631:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9616:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9616:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9608:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9393:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9407:4:6",
														"type": ""
													}
												],
												"src": "9242:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9820:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9837:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9848:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9830:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9830:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9830:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9871:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9882:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9867:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9867:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9887:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9860:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9860:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9860:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9910:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9921:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9906:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:18:6"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9926:33:6",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9899:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9899:61:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9899:61:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9969:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9981:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9992:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9977:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9977:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9969:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9797:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9811:4:6",
														"type": ""
													}
												],
												"src": "9646:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10180:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10197:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10208:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10190:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10190:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10190:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10231:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10242:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10227:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10227:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10247:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10220:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10220:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10220:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10270:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10281:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10266:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10266:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10286:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10259:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10259:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10259:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10341:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10352:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10337:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10337:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10357:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10330:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10330:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10330:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10375:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10387:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10398:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10383:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10383:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10375:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10157:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10171:4:6",
														"type": ""
													}
												],
												"src": "10006:402:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a0823114610141578063906571471461016a57806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce91906108cd565b60405180910390f35b6100ea6100e5366004610937565b610252565b60405190151581526020016100ce565b6003545b6040519081526020016100ce565b6100ea61011a366004610961565b61026c565b604051601281526020016100ce565b6100ea61013c366004610937565b610290565b6100fe61014f36600461099d565b6001600160a01b031660009081526001602052604090205490565b61017d610178366004610a62565b6102b2565b005b6100c16103f3565b6100ea610195366004610937565b610402565b6100ea6101a8366004610937565b61047d565b6100fe6101bb366004610ad6565b61048b565b6060600480546101cf90610b09565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610b09565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b6000336102608185856104b6565b60019150505b92915050565b60003361027a8582856105db565b61028585858561064f565b506001949350505050565b6000336102608185856102a3838361048b565b6102ad9190610b43565b6104b6565b600054610100900460ff16158080156102d25750600054600160ff909116105b806102ec5750303b1580156102ec575060005460ff166001145b6103545760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610377576000805461ff0019166101001790555b61038d846b033b2e3c9fd0803ce8000000610725565b60046103998482610bb2565b5060056103a68382610bb2565b5080156103ed576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6060600580546101cf90610b09565b60003381610410828661048b565b9050838110156104705760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161034b565b61028582868684036104b6565b60003361026081858561064f565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6001600160a01b0383166105185760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161034b565b6001600160a01b0382166105795760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161034b565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105e7848461048b565b905060001981146103ed57818110156106425760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161034b565b6103ed84848484036104b6565b6001600160a01b0383166106b35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161034b565b6001600160a01b0382166107155760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161034b565b61072083838361078b565b505050565b6001600160a01b03821661077b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161034b565b6107876000838361078b565b5050565b6001600160a01b0383166107b65780600360008282546107ab9190610b43565b9091555061084d9050565b6001600160a01b0383166000908152600160205260409020548181101561082e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161034b565b6001600160a01b03841660009081526001602052604090209082900390555b6001600160a01b03821661086957600380548290039055610888565b6001600160a01b03821660009081526001602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105ce91815260200190565b600060208083528351808285015260005b818110156108fa578581018301518582016040015282016108de565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461093257600080fd5b919050565b6000806040838503121561094a57600080fd5b6109538361091b565b946020939093013593505050565b60008060006060848603121561097657600080fd5b61097f8461091b565b925061098d6020850161091b565b9150604084013590509250925092565b6000602082840312156109af57600080fd5b6109b88261091b565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109e657600080fd5b813567ffffffffffffffff80821115610a0157610a016109bf565b604051601f8301601f19908116603f01168101908282118183101715610a2957610a296109bf565b81604052838152866020858801011115610a4257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610a7757600080fd5b610a808461091b565b9250602084013567ffffffffffffffff80821115610a9d57600080fd5b610aa9878388016109d5565b93506040860135915080821115610abf57600080fd5b50610acc868287016109d5565b9150509250925092565b60008060408385031215610ae957600080fd5b610af28361091b565b9150610b006020840161091b565b90509250929050565b600181811c90821680610b1d57607f821691505b602082108103610b3d57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026657634e487b7160e01b600052601160045260246000fd5b601f82111561072057600081815260208120601f850160051c81016020861015610b8b5750805b601f850160051c820191505b81811015610baa57828155600101610b97565b505050505050565b815167ffffffffffffffff811115610bcc57610bcc6109bf565b610be081610bda8454610b09565b84610b64565b602080601f831160018114610c155760008415610bfd5750858301515b600019600386901b1c1916600185901b178555610baa565b600085815260208120601f198616915b82811015610c4457888601518255948401946001909101908401610c25565b5085821015610c625787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220f660a98cd36cfa4af05644371c14c1ad2f80c39acd6c84c3d58f53fc6a4675ab64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x90657147 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x12E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0xA62 JUMP JUMPDEST PUSH2 0x2B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST PUSH2 0xFE PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xAD6 JUMP JUMPDEST PUSH2 0x48B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0xB09 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FB SWAP1 PUSH2 0xB09 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x248 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x248 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x27A DUP6 DUP3 DUP6 PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x285 DUP6 DUP6 DUP6 PUSH2 0x64F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x2A3 DUP4 DUP4 PUSH2 0x48B JUMP JUMPDEST PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0xB43 JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x2D2 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x2EC JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EC JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x38D DUP5 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x399 DUP5 DUP3 PUSH2 0xBB2 JUMP JUMPDEST POP PUSH1 0x5 PUSH2 0x3A6 DUP4 DUP3 PUSH2 0xBB2 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x410 DUP3 DUP7 PUSH2 0x48B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x285 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E7 DUP5 DUP5 PUSH2 0x48B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x3ED JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x3ED DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x720 DUP4 DUP4 DUP4 PUSH2 0x78B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x787 PUSH1 0x0 DUP4 DUP4 PUSH2 0x78B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7B6 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0xB43 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x84D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x82E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x869 JUMPI PUSH1 0x3 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x888 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5CE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8FA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8DE JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x94A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x953 DUP4 PUSH2 0x91B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97F DUP5 PUSH2 0x91B JUMP JUMPDEST SWAP3 POP PUSH2 0x98D PUSH1 0x20 DUP6 ADD PUSH2 0x91B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B8 DUP3 PUSH2 0x91B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA01 JUMPI PUSH2 0xA01 PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xA29 JUMPI PUSH2 0xA29 PUSH2 0x9BF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xA42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA80 DUP5 PUSH2 0x91B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA9 DUP8 DUP4 DUP9 ADD PUSH2 0x9D5 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xACC DUP7 DUP3 DUP8 ADD PUSH2 0x9D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAF2 DUP4 PUSH2 0x91B JUMP JUMPDEST SWAP2 POP PUSH2 0xB00 PUSH1 0x20 DUP5 ADD PUSH2 0x91B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB1D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB3D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xB8B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBAA JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB97 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBCC JUMPI PUSH2 0xBCC PUSH2 0x9BF JUMP JUMPDEST PUSH2 0xBE0 DUP2 PUSH2 0xBDA DUP5 SLOAD PUSH2 0xB09 JUMP JUMPDEST DUP5 PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xC15 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xBFD JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC44 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xC25 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xC62 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 PUSH1 0xA9 DUP13 0xD3 PUSH13 0xFA4AF05644371C14C1AD2F80C3 SWAP11 0xCD PUSH13 0x84C3D58F53FC6A4675AB64736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "1625:10316:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2377:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4664:216;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:6;;1162:22;1144:41;;1132:2;1117:18;4664:216:5;1004:187:6;3447:97:5;3525:12;;3447:97;;;1342:25:6;;;1330:2;1315:18;3447:97:5;1196:177:6;5442:277:5;;;;;;:::i;:::-;;:::i;3305:82::-;;;3378:2;1853:36:6;;1841:2;1826:18;3305:82:5;1711:184:6;6114:262:5;;;;;;:::i;:::-;;:::i;3602:116::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3693:18:5;3667:7;3693:18;;;:9;:18;;;;;;;3602:116;2101:211;;;;;;:::i;:::-;;:::i;:::-;;2579:93;;;:::i;6863:489::-;;;;;;:::i;:::-;;:::i;3914:208::-;;;;;;:::i;:::-;;:::i;4180:176::-;;;;;;:::i;:::-;;:::i;2377:89::-;2422:13;2454:5;2447:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2377:89;:::o;4664:216::-;4762:4;719:10:4;4820:32:5;719:10:4;4836:7:5;4845:6;4820:8;:32::i;:::-;4869:4;4862:11;;;4664:216;;;;;:::o;5442:277::-;5560:4;719:10:4;5616:38:5;5632:4;719:10:4;5647:6:5;5616:15;:38::i;:::-;5664:27;5674:4;5680:2;5684:6;5664:9;:27::i;:::-;-1:-1:-1;5708:4:5;;5442:277;-1:-1:-1;;;;5442:277:5:o;6114:262::-;6226:4;719:10:4;6284:64:5;719:10:4;6300:7:5;6337:10;6309:25;719:10:4;6300:7:5;6309:9;:25::i;:::-;:38;;;;:::i;:::-;6284:8;:64::i;2101:211::-;3268:19:0;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:0;;3369:1;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:0;1702:19:3;:23;;;3376:55:0;;-1:-1:-1;3414:12:0;;;;;:17;3376:55;3314:190;;;;-1:-1:-1;;;3314:190:0;;4648:2:6;3314:190:0;;;4630:21:6;4687:2;4667:18;;;4660:30;4726:34;4706:18;;;4699:62;-1:-1:-1;;;4777:18:6;;;4770:44;4831:19;;3314:190:0;;;;;;;;;3514:12;:16;;-1:-1:-1;;3514:16:0;3529:1;3514:16;;;3540:65;;;;3574:13;:20;;-1:-1:-1;;3574:20:0;;;;;3540:65;2233:22:5::1;2239:7;2248:6;2233:5;:22::i;:::-;2265:5;:13;2273:5:::0;2265;:13:::1;:::i;:::-;-1:-1:-1::0;2288:7:5::1;:17;2298:7:::0;2288;:17:::1;:::i;:::-;;3629:14:0::0;3625:99;;;3675:5;3659:21;;-1:-1:-1;;3659:21:0;;;3699:14;;-1:-1:-1;1853:36:6;;3699:14:0;;1841:2:6;1826:18;3699:14:0;;;;;;;3625:99;3258:472;2101:211:5;;;:::o;2579:93::-;2626:13;2658:7;2651:14;;;;;:::i;6863:489::-;6980:4;719:10:4;6980:4:5;7065:25;719:10:4;7082:7:5;7065:9;:25::i;:::-;7038:52;;7141:15;7121:16;:35;;7100:119;;;;-1:-1:-1;;;7100:119:5;;7466:2:6;7100:119:5;;;7448:21:6;7505:2;7485:18;;;7478:30;7544:34;7524:18;;;7517:62;-1:-1:-1;;;7595:18:6;;;7588:35;7640:19;;7100:119:5;7264:401:6;7100:119:5;7253:60;7262:5;7269:7;7297:15;7278:16;:34;7253:8;:60::i;3914:208::-;4008:4;719:10:4;4066:28:5;719:10:4;4083:2:5;4087:6;4066:9;:28::i;4180:176::-;-1:-1:-1;;;;;4322:18:5;;;4292:7;4322:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4180:176::o;10801:370::-;-1:-1:-1;;;;;10932:19:5;;10924:68;;;;-1:-1:-1;;;10924:68:5;;7872:2:6;10924:68:5;;;7854:21:6;7911:2;7891:18;;;7884:30;7950:34;7930:18;;;7923:62;-1:-1:-1;;;8001:18:6;;;7994:34;8045:19;;10924:68:5;7670:400:6;10924:68:5;-1:-1:-1;;;;;11010:21:5;;11002:68;;;;-1:-1:-1;;;11002:68:5;;8277:2:6;11002:68:5;;;8259:21:6;8316:2;8296:18;;;8289:30;8355:34;8335:18;;;8328:62;-1:-1:-1;;;8406:18:6;;;8399:32;8448:19;;11002:68:5;8075:398:6;11002:68:5;-1:-1:-1;;;;;11081:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11132:32;;1342:25:6;;;11132:32:5;;1315:18:6;11132:32:5;;;;;;;;10801:370;;;:::o;11452:487::-;11582:24;11609:25;11619:5;11626:7;11609:9;:25::i;:::-;11582:52;;-1:-1:-1;;11648:16:5;:37;11644:289;;11746:6;11726:16;:26;;11701:114;;;;-1:-1:-1;;;11701:114:5;;8680:2:6;11701:114:5;;;8662:21:6;8719:2;8699:18;;;8692:30;8758:31;8738:18;;;8731:59;8807:18;;11701:114:5;8478:353:6;11701:114:5;11857:51;11866:5;11873:7;11901:6;11882:16;:25;11857:8;:51::i;7717:294::-;-1:-1:-1;;;;;7835:18:5;;7827:68;;;;-1:-1:-1;;;7827:68:5;;9038:2:6;7827:68:5;;;9020:21:6;9077:2;9057:18;;;9050:30;9116:34;9096:18;;;9089:62;-1:-1:-1;;;9167:18:6;;;9160:35;9212:19;;7827:68:5;8836:401:6;7827:68:5;-1:-1:-1;;;;;7913:16:5;;7905:64;;;;-1:-1:-1;;;7905:64:5;;9444:2:6;7905:64:5;;;9426:21:6;9483:2;9463:18;;;9456:30;9522:34;9502:18;;;9495:62;-1:-1:-1;;;9573:18:6;;;9566:33;9616:19;;7905:64:5;9242:399:6;7905:64:5;7979:25;7987:4;7993:2;7997:6;7979:7;:25::i;:::-;7717:294;;;:::o;9692:185::-;-1:-1:-1;;;;;9767:21:5;;9759:65;;;;-1:-1:-1;;;9759:65:5;;9848:2:6;9759:65:5;;;9830:21:6;9887:2;9867:18;;;9860:30;9926:33;9906:18;;;9899:61;9977:18;;9759:65:5;9646:355:6;9759:65:5;9834:36;9850:1;9854:7;9863:6;9834:7;:36::i;:::-;9692:185;;:::o;8311:1049::-;-1:-1:-1;;;;;8431:18:5;;8427:445;;8481:6;8465:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;8427:445:5;;-1:-1:-1;8427:445:5;;-1:-1:-1;;;;;8540:15:5;;8518:19;8540:15;;;:9;:15;;;;;;8594:21;;;;8569:118;;;;-1:-1:-1;;;8569:118:5;;10208:2:6;8569:118:5;;;10190:21:6;10247:2;10227:18;;;10220:30;10286:34;10266:18;;;10259:62;-1:-1:-1;;;10337:18:6;;;10330:36;10383:19;;8569:118:5;10006:402:6;8569:118:5;-1:-1:-1;;;;;8809:15:5;;;;;;:9;:15;;;;;8827:20;;;;8809:38;;8427:445;-1:-1:-1;;;;;8886:16:5;;8882:430;;9051:12;:22;;;;;;;8882:430;;;-1:-1:-1;;;;;9264:13:5;;;;;;:9;:13;;;;;:23;;;;;;8882:430;9342:2;-1:-1:-1;;;;;9327:26:5;9336:4;-1:-1:-1;;;;;9327:26:5;;9346:6;9327:26;;;;1342:25:6;;1330:2;1315:18;;1196:177;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:6;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:6:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:6:o;2091:127::-;2152:10;2147:3;2143:20;2140:1;2133:31;2183:4;2180:1;2173:15;2207:4;2204:1;2197:15;2223:719;2266:5;2319:3;2312:4;2304:6;2300:17;2296:27;2286:55;;2337:1;2334;2327:12;2286:55;2373:6;2360:20;2399:18;2436:2;2432;2429:10;2426:36;;;2442:18;;:::i;:::-;2517:2;2511:9;2485:2;2571:13;;-1:-1:-1;;2567:22:6;;;2591:2;2563:31;2559:40;2547:53;;;2615:18;;;2635:22;;;2612:46;2609:72;;;2661:18;;:::i;:::-;2701:10;2697:2;2690:22;2736:2;2728:6;2721:18;2782:3;2775:4;2770:2;2762:6;2758:15;2754:26;2751:35;2748:55;;;2799:1;2796;2789:12;2748:55;2863:2;2856:4;2848:6;2844:17;2837:4;2829:6;2825:17;2812:54;2910:1;2903:4;2898:2;2890:6;2886:15;2882:26;2875:37;2930:6;2921:15;;;;;;2223:719;;;;:::o;2947:617::-;3044:6;3052;3060;3113:2;3101:9;3092:7;3088:23;3084:32;3081:52;;;3129:1;3126;3119:12;3081:52;3152:29;3171:9;3152:29;:::i;:::-;3142:39;;3232:2;3221:9;3217:18;3204:32;3255:18;3296:2;3288:6;3285:14;3282:34;;;3312:1;3309;3302:12;3282:34;3335:50;3377:7;3368:6;3357:9;3353:22;3335:50;:::i;:::-;3325:60;;3438:2;3427:9;3423:18;3410:32;3394:48;;3467:2;3457:8;3454:16;3451:36;;;3483:1;3480;3473:12;3451:36;;3506:52;3550:7;3539:8;3528:9;3524:24;3506:52;:::i;:::-;3496:62;;;2947:617;;;;;:::o;3569:260::-;3637:6;3645;3698:2;3686:9;3677:7;3673:23;3669:32;3666:52;;;3714:1;3711;3704:12;3666:52;3737:29;3756:9;3737:29;:::i;:::-;3727:39;;3785:38;3819:2;3808:9;3804:18;3785:38;:::i;:::-;3775:48;;3569:260;;;;;:::o;3834:380::-;3913:1;3909:12;;;;3956;;;3977:61;;4031:4;4023:6;4019:17;4009:27;;3977:61;4084:2;4076:6;4073:14;4053:18;4050:38;4047:161;;4130:10;4125:3;4121:20;4118:1;4111:31;4165:4;4162:1;4155:15;4193:4;4190:1;4183:15;4047:161;;3834:380;;;:::o;4219:222::-;4284:9;;;4305:10;;;4302:133;;;4357:10;4352:3;4348:20;4345:1;4338:31;4392:4;4389:1;4382:15;4420:4;4417:1;4410:15;4987:545;5089:2;5084:3;5081:11;5078:448;;;5125:1;5150:5;5146:2;5139:17;5195:4;5191:2;5181:19;5265:2;5253:10;5249:19;5246:1;5242:27;5236:4;5232:38;5301:4;5289:10;5286:20;5283:47;;;-1:-1:-1;5324:4:6;5283:47;5379:2;5374:3;5370:12;5367:1;5363:20;5357:4;5353:31;5343:41;;5434:82;5452:2;5445:5;5442:13;5434:82;;;5497:17;;;5478:1;5467:13;5434:82;;;5438:3;;;4987:545;;;:::o;5708:1352::-;5834:3;5828:10;5861:18;5853:6;5850:30;5847:56;;;5883:18;;:::i;:::-;5912:97;6002:6;5962:38;5994:4;5988:11;5962:38;:::i;:::-;5956:4;5912:97;:::i;:::-;6064:4;;6128:2;6117:14;;6145:1;6140:663;;;;6847:1;6864:6;6861:89;;;-1:-1:-1;6916:19:6;;;6910:26;6861:89;-1:-1:-1;;5665:1:6;5661:11;;;5657:24;5653:29;5643:40;5689:1;5685:11;;;5640:57;6963:81;;6110:944;;6140:663;4934:1;4927:14;;;4971:4;4958:18;;-1:-1:-1;;6176:20:6;;;6294:236;6308:7;6305:1;6302:14;6294:236;;;6397:19;;;6391:26;6376:42;;6489:27;;;;6457:1;6445:14;;;;6324:19;;6294:236;;;6298:3;6558:6;6549:7;6546:19;6543:201;;;6619:19;;;6613:26;-1:-1:-1;;6702:1:6;6698:14;;;6714:3;6694:24;6690:37;6686:42;6671:58;6656:74;;6543:201;-1:-1:-1;;;;;6790:1:6;6774:14;;;6770:22;6757:36;;-1:-1:-1;5708:1352:6:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "648000",
								"executionCost": "683",
								"totalCost": "648683"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24629",
								"balanceOf(address)": "2537",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27017",
								"increaseAllowance(address,uint256)": "infinite",
								"initialize(address,string,string)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51301",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1625,
									"end": 11941,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1625,
									"end": 11941,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f660a98cd36cfa4af05644371c14c1ad2f80c39acd6c84c3d58f53fc6a4675ab64736f6c63430008120033",
									".code": [
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "90657147"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "39509351"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 11941,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2377,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2377,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4664,
											"end": 4880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 4664,
											"end": 4880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3447,
											"end": 3544,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3447,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3537,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3525,
											"end": 3537,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3544,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3447,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3544,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3447,
											"end": 3544,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3447,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5442,
											"end": 5719,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5442,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5442,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5442,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 5442,
											"end": 5719,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5442,
											"end": 5719,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5442,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 5442,
											"end": 5719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5442,
											"end": 5719,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 5442,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5442,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 5442,
											"end": 5719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3387,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3305,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3387,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3305,
											"end": 3387,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6114,
											"end": 6376,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 6114,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6114,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6114,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6114,
											"end": 6376,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6114,
											"end": 6376,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6114,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 6114,
											"end": 6376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6114,
											"end": 6376,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6114,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6114,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 6114,
											"end": 6376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3602,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3674,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3702,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3718,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2101,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2101,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2579,
											"end": 2672,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2579,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2579,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2579,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2579,
											"end": 2672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6863,
											"end": 7352,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 6863,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6863,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6863,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 6863,
											"end": 7352,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6863,
											"end": 7352,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6863,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 6863,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6863,
											"end": 7352,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 6863,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6863,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 6863,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4122,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 3914,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3914,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3914,
											"end": 4122,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4122,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3914,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3914,
											"end": 4122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4122,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3914,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3914,
											"end": 4122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4356,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 4180,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4180,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4180,
											"end": 4356,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4356,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4180,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 4180,
											"end": 4356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4356,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4180,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4180,
											"end": 4356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2454,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2447,
											"end": 2459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2447,
											"end": 2459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4766,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4836,
											"end": 4843,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4851,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 4820,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4852,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 4820,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4869,
											"end": 4873,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5442,
											"end": 5719,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 5442,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5560,
											"end": 5564,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 5632,
											"end": 5636,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5647,
											"end": 5653,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5616,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5616,
											"end": 5654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5616,
											"end": 5654,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 5616,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5664,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5682,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5684,
											"end": 5690,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5664,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 5664,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5664,
											"end": 5691,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 5664,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5708,
											"end": 5712,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5708,
											"end": 5712,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5442,
											"end": 5719,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5442,
											"end": 5719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6114,
											"end": 6376,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 6114,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6226,
											"end": 6230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6300,
											"end": 6307,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6347,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6309,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6300,
											"end": 6307,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6309,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 6309,
											"end": 6334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6309,
											"end": 6334,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 6309,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6309,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 6309,
											"end": 6347,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6309,
											"end": 6347,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6309,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 6309,
											"end": 6347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6309,
											"end": 6347,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 6309,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6284,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 6284,
											"end": 6348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3268,
											"end": 3287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3290,
											"end": 3304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3290,
											"end": 3304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3369,
											"end": 3370,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3370,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3335,
											"end": 3432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3404,
											"end": 3408,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3376,
											"end": 3431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3414,
											"end": 3431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3431,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3376,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4650,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4630,
											"end": 4651,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4687,
											"end": 4689,
											"name": "PUSH",
											"source": 6,
											"value": "2E"
										},
										{
											"begin": 4667,
											"end": 4685,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4667,
											"end": 4685,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 4685,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4660,
											"end": 4690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH",
											"source": 6,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 4706,
											"end": 4724,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4706,
											"end": 4724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4699,
											"end": 4761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 4814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4831,
											"end": 4850,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4831,
											"end": 4850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3314,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3514,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3514,
											"end": 3530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3514,
											"end": 3530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3530,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3514,
											"end": 3530,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3514,
											"end": 3530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3514,
											"end": 3530,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3605,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3540,
											"end": 3605,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3574,
											"end": 3594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3594,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3574,
											"end": 3594,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3594,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3540,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3540,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2239,
											"end": 2246,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 2233,
											"end": 2238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2233,
											"end": 2255,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2255,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2233,
											"end": 2255,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2265,
											"end": 2278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2270,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2265,
											"end": 2278,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2278,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2265,
											"end": 2278,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2288,
											"end": 2295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2288,
											"end": 2305,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2305,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2288,
											"end": 2305,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2305,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2288,
											"end": 2305,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2305,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3724,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3625,
											"end": 3724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3675,
											"end": 3680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3699,
											"end": 3713,
											"name": "PUSH",
											"source": 0,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3699,
											"end": 3713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3699,
											"end": 3713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3713,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3713,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3724,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3625,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2312,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2579,
											"end": 2672,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2579,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2639,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2658,
											"end": 2665,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2651,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6863,
											"end": 7352,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 6863,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6980,
											"end": 6984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6980,
											"end": 6984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7089,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 7065,
											"end": 7090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7090,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7065,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7090,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7141,
											"end": 7156,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7121,
											"end": 7137,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7121,
											"end": 7156,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7121,
											"end": 7156,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7100,
											"end": 7219,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7219,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7100,
											"end": 7219,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7100,
											"end": 7219,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7219,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7466,
											"end": 7468,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7100,
											"end": 7219,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7100,
											"end": 7219,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7219,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7469,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7505,
											"end": 7507,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 7485,
											"end": 7503,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7485,
											"end": 7503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7485,
											"end": 7503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7508,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7578,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 7524,
											"end": 7542,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7524,
											"end": 7542,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7517,
											"end": 7579,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7588,
											"end": 7623,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7640,
											"end": 7659,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7640,
											"end": 7659,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7100,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 7264,
											"end": 7665,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7100,
											"end": 7219,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7100,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7253,
											"end": 7313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 7262,
											"end": 7267,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7269,
											"end": 7276,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7312,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7278,
											"end": 7294,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7278,
											"end": 7312,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7253,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 7253,
											"end": 7313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4122,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3914,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4008,
											"end": 4012,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4066,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4085,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4093,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4066,
											"end": 4094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4356,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4180,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4333,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10801,
											"end": 11171,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 10801,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10932,
											"end": 10951,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10932,
											"end": 10951,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10924,
											"end": 10992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 10924,
											"end": 10992,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10924,
											"end": 10992,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10924,
											"end": 10992,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10924,
											"end": 10992,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10924,
											"end": 10992,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7872,
											"end": 7874,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10924,
											"end": 10992,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10924,
											"end": 10992,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10924,
											"end": 10992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7854,
											"end": 7875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7911,
											"end": 7913,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7884,
											"end": 7914,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7950,
											"end": 7984,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 7930,
											"end": 7948,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7930,
											"end": 7948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7930,
											"end": 7948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7923,
											"end": 7985,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8001,
											"end": 8019,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8001,
											"end": 8019,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8001,
											"end": 8019,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7994,
											"end": 8028,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8045,
											"end": 8064,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8045,
											"end": 8064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10924,
											"end": 10992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 7670,
											"end": 8070,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10924,
											"end": 10992,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 10924,
											"end": 10992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11010,
											"end": 11031,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11010,
											"end": 11031,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11002,
											"end": 11070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 11002,
											"end": 11070,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11002,
											"end": 11070,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11002,
											"end": 11070,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11002,
											"end": 11070,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11002,
											"end": 11070,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8277,
											"end": 8279,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11002,
											"end": 11070,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11002,
											"end": 11070,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11002,
											"end": 11070,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8259,
											"end": 8280,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8318,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8296,
											"end": 8314,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8296,
											"end": 8314,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8296,
											"end": 8314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8289,
											"end": 8319,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8355,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 8335,
											"end": 8353,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8335,
											"end": 8353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8335,
											"end": 8353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8406,
											"end": 8424,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8406,
											"end": 8424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8406,
											"end": 8424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8399,
											"end": 8431,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8467,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8448,
											"end": 8467,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11002,
											"end": 11070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 8075,
											"end": 8473,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11002,
											"end": 11070,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 11002,
											"end": 11070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11092,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11108,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11108,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11108,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11108,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11108,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11117,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11081,
											"end": 11117,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11164,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11132,
											"end": 11164,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11132,
											"end": 11164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11132,
											"end": 11164,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 11132,
											"end": 11164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11164,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11132,
											"end": 11164,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11164,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11164,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11164,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 10801,
											"end": 11171,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10801,
											"end": 11171,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10801,
											"end": 11171,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10801,
											"end": 11171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11452,
											"end": 11939,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 11452,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11582,
											"end": 11606,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 11619,
											"end": 11624,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11626,
											"end": 11633,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11609,
											"end": 11618,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 11609,
											"end": 11634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 11609,
											"end": 11634,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11582,
											"end": 11634,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11582,
											"end": 11634,
											"name": "POP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11648,
											"end": 11664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11648,
											"end": 11685,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11644,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 11644,
											"end": 11933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11746,
											"end": 11752,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11726,
											"end": 11742,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11726,
											"end": 11752,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 11726,
											"end": 11752,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11701,
											"end": 11815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 11701,
											"end": 11815,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11701,
											"end": 11815,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11701,
											"end": 11815,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11701,
											"end": 11815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11701,
											"end": 11815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8680,
											"end": 8682,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11701,
											"end": 11815,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11701,
											"end": 11815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11701,
											"end": 11815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8662,
											"end": 8683,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8719,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 8699,
											"end": 8717,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8699,
											"end": 8717,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8717,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8758,
											"end": 8789,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 8738,
											"end": 8756,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8738,
											"end": 8756,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8738,
											"end": 8756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8731,
											"end": 8790,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11701,
											"end": 11815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 8478,
											"end": 8831,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11701,
											"end": 11815,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 11701,
											"end": 11815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11857,
											"end": 11908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 11866,
											"end": 11871,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11873,
											"end": 11880,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11901,
											"end": 11907,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11882,
											"end": 11898,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11882,
											"end": 11907,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11857,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 11857,
											"end": 11908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7717,
											"end": 8011,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 7717,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7827,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 7827,
											"end": 7895,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7827,
											"end": 7895,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7827,
											"end": 7895,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7827,
											"end": 7895,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7827,
											"end": 7895,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9038,
											"end": 9040,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7827,
											"end": 7895,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7827,
											"end": 7895,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7827,
											"end": 7895,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9077,
											"end": 9079,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9116,
											"end": 9150,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9089,
											"end": 9151,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9160,
											"end": 9195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7827,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 8836,
											"end": 9237,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7827,
											"end": 7895,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 7827,
											"end": 7895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7913,
											"end": 7929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7913,
											"end": 7929,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7905,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 7905,
											"end": 7969,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7905,
											"end": 7969,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7905,
											"end": 7969,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7905,
											"end": 7969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7905,
											"end": 7969,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9444,
											"end": 9446,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7905,
											"end": 7969,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7905,
											"end": 7969,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7905,
											"end": 7969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9483,
											"end": 9485,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9456,
											"end": 9486,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9522,
											"end": 9556,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 9502,
											"end": 9520,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9502,
											"end": 9520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9557,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9573,
											"end": 9591,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9573,
											"end": 9591,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9573,
											"end": 9591,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9566,
											"end": 9599,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9616,
											"end": 9635,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9616,
											"end": 9635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7905,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 9242,
											"end": 9641,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7905,
											"end": 7969,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 7905,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 7987,
											"end": 7991,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7993,
											"end": 7995,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7997,
											"end": 8003,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7979,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 7979,
											"end": 8004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 7979,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7717,
											"end": 8011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7717,
											"end": 8011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7717,
											"end": 8011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7717,
											"end": 8011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 9877,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 9692,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9767,
											"end": 9788,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9767,
											"end": 9788,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9848,
											"end": 9850,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9830,
											"end": 9851,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9889,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9867,
											"end": 9885,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9867,
											"end": 9885,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9867,
											"end": 9885,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9860,
											"end": 9890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9926,
											"end": 9959,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 9906,
											"end": 9924,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9906,
											"end": 9924,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9924,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9899,
											"end": 9960,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 9646,
											"end": 10001,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 9850,
											"end": 9851,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9854,
											"end": 9861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9863,
											"end": 9869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 9834,
											"end": 9870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9870,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 9834,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 9877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 9877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 9877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8311,
											"end": 9360,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 8311,
											"end": 9360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8431,
											"end": 8449,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8449,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8427,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 8427,
											"end": 8872,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8481,
											"end": 8487,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8477,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 8465,
											"end": 8477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 8465,
											"end": 8487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8427,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 8427,
											"end": 8872,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8427,
											"end": 8872,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8427,
											"end": 8872,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 8427,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8540,
											"end": 8555,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8540,
											"end": 8555,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8518,
											"end": 8537,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8540,
											"end": 8555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8540,
											"end": 8555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8540,
											"end": 8555,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8540,
											"end": 8549,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8540,
											"end": 8555,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8540,
											"end": 8555,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8540,
											"end": 8555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8540,
											"end": 8555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8540,
											"end": 8555,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8540,
											"end": 8555,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8594,
											"end": 8615,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8594,
											"end": 8615,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8594,
											"end": 8615,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 8594,
											"end": 8615,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8569,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8569,
											"end": 8687,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8569,
											"end": 8687,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8569,
											"end": 8687,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8569,
											"end": 8687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8569,
											"end": 8687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10210,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8569,
											"end": 8687,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8569,
											"end": 8687,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8569,
											"end": 8687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10190,
											"end": 10211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10247,
											"end": 10249,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 10227,
											"end": 10245,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10227,
											"end": 10245,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10227,
											"end": 10245,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10220,
											"end": 10250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10286,
											"end": 10320,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 10266,
											"end": 10284,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10266,
											"end": 10284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10266,
											"end": 10284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10259,
											"end": 10321,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10337,
											"end": 10355,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 10337,
											"end": 10355,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10337,
											"end": 10355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10330,
											"end": 10366,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10383,
											"end": 10402,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 10383,
											"end": 10402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8569,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 10006,
											"end": 10408,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8569,
											"end": 8687,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8569,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8809,
											"end": 8824,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8809,
											"end": 8824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8809,
											"end": 8824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8809,
											"end": 8824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8809,
											"end": 8824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8809,
											"end": 8824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8809,
											"end": 8818,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8809,
											"end": 8824,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8809,
											"end": 8824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8809,
											"end": 8824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8809,
											"end": 8824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8809,
											"end": 8824,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8827,
											"end": 8847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8827,
											"end": 8847,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8827,
											"end": 8847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8827,
											"end": 8847,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8809,
											"end": 8847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8809,
											"end": 8847,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8427,
											"end": 8872,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 8427,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8886,
											"end": 8902,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8886,
											"end": 8902,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8882,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 8882,
											"end": 9312,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9063,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9051,
											"end": 9073,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9073,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9073,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9073,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8882,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 8882,
											"end": 9312,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8882,
											"end": 9312,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 8882,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9264,
											"end": 9277,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9277,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9264,
											"end": 9277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9277,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9277,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9273,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9264,
											"end": 9277,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9264,
											"end": 9277,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9277,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9264,
											"end": 9277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9277,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9287,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9287,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9287,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9287,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9287,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8882,
											"end": 9312,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 8882,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9342,
											"end": 9344,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9327,
											"end": 9353,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9336,
											"end": 9340,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9327,
											"end": 9353,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9327,
											"end": 9353,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9346,
											"end": 9352,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9327,
											"end": 9353,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9327,
											"end": 9353,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9327,
											"end": 9353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 9327,
											"end": 9353,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2218,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2091,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2162,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2147,
											"end": 2150,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2143,
											"end": 2163,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2180,
											"end": 2181,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2211,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2212,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2942,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2223,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2322,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2316,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2304,
											"end": 2310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2323,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2286,
											"end": 2341,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2335,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2327,
											"end": 2339,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2341,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2286,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2379,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2380,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2417,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2436,
											"end": 2438,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2434,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2439,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2462,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2426,
											"end": 2462,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2442,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2517,
											"end": 2519,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2511,
											"end": 2520,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2567,
											"end": 2589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2589,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 2563,
											"end": 2594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2599,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2600,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2633,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2657,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2657,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2658,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2609,
											"end": 2681,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2609,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2609,
											"end": 2681,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2661,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2661,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2661,
											"end": 2679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2661,
											"end": 2679,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2661,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2699,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2738,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2782,
											"end": 2785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2775,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2770,
											"end": 2772,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2768,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2786,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2748,
											"end": 2803,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2748,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2748,
											"end": 2803,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2800,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2797,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2801,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2748,
											"end": 2803,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2748,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2865,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2860,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2848,
											"end": 2854,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2837,
											"end": 2841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2829,
											"end": 2835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2866,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2911,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2907,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2898,
											"end": 2900,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2896,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2882,
											"end": 2908,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2942,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2942,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2947,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3044,
											"end": 3050,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3058,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3115,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3101,
											"end": 3110,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3099,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3111,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3133,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3081,
											"end": 3133,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3131,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3133,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3081,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3171,
											"end": 3180,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3152,
											"end": 3181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3181,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3152,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3181,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3232,
											"end": 3234,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3221,
											"end": 3230,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3204,
											"end": 3236,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3273,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3296,
											"end": 3298,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3294,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3299,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3316,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3282,
											"end": 3316,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3312,
											"end": 3313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3310,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3316,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3282,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3377,
											"end": 3384,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3374,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3366,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3335,
											"end": 3385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3335,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3385,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3438,
											"end": 3440,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3427,
											"end": 3436,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3442,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3442,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3457,
											"end": 3465,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3454,
											"end": 3470,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3487,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3451,
											"end": 3487,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3483,
											"end": 3484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3481,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3485,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3487,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3451,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3487,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3550,
											"end": 3557,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3547,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3506,
											"end": 3558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3558,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3506,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3558,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3564,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3564,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3564,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3829,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3569,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3643,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3700,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3686,
											"end": 3695,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3677,
											"end": 3684,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3673,
											"end": 3696,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3701,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3718,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3666,
											"end": 3718,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3712,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3718,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3666,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3756,
											"end": 3765,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3737,
											"end": 3766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3766,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3737,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3766,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3819,
											"end": 3821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3808,
											"end": 3817,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3785,
											"end": 3823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3823,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3785,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3829,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3829,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4214,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3834,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3913,
											"end": 3914,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3956,
											"end": 3968,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3956,
											"end": 3968,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3956,
											"end": 3968,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3977,
											"end": 4038,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4035,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 4023,
											"end": 4029,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4036,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 4038,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3977,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4086,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4073,
											"end": 4087,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4050,
											"end": 4088,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4047,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4047,
											"end": 4208,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4140,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 4125,
											"end": 4128,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4121,
											"end": 4141,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4142,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4165,
											"end": 4169,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4162,
											"end": 4163,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4197,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4190,
											"end": 4191,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4198,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4047,
											"end": 4208,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4047,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4047,
											"end": 4208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4441,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 4219,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4284,
											"end": 4293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4284,
											"end": 4293,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4284,
											"end": 4293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4305,
											"end": 4315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4305,
											"end": 4315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4305,
											"end": 4315,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4302,
											"end": 4435,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4302,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4302,
											"end": 4435,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4367,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 4352,
											"end": 4355,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4348,
											"end": 4368,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4345,
											"end": 4346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4338,
											"end": 4369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4392,
											"end": 4396,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4389,
											"end": 4390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4382,
											"end": 4397,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4417,
											"end": 4418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4410,
											"end": 4425,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5532,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 4987,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5089,
											"end": 5091,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5084,
											"end": 5087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5092,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5526,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5078,
											"end": 5526,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5125,
											"end": 5126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5150,
											"end": 5155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5156,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5195,
											"end": 5199,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5200,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5265,
											"end": 5267,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5253,
											"end": 5263,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5249,
											"end": 5268,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5246,
											"end": 5247,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5242,
											"end": 5269,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 5240,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5301,
											"end": 5305,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5289,
											"end": 5299,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5283,
											"end": 5330,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5283,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5283,
											"end": 5330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5324,
											"end": 5328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5283,
											"end": 5330,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5283,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5381,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5374,
											"end": 5377,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5370,
											"end": 5382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5367,
											"end": 5368,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5363,
											"end": 5383,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5384,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5384,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5516,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5434,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5454,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5442,
											"end": 5455,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5516,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 5434,
											"end": 5516,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5497,
											"end": 5514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5497,
											"end": 5514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5497,
											"end": 5514,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 5479,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5434,
											"end": 5516,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5516,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 5434,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5438,
											"end": 5441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5438,
											"end": 5441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5438,
											"end": 5441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5532,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5532,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5532,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5708,
											"end": 7060,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 5708,
											"end": 7060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5834,
											"end": 5837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 5838,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5879,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5853,
											"end": 5859,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5850,
											"end": 5880,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5847,
											"end": 5903,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5847,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 5847,
											"end": 5903,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5883,
											"end": 5901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 6002,
											"end": 6008,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5962,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5994,
											"end": 5998,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 5999,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5962,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5962,
											"end": 6000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5962,
											"end": 6000,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5962,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5912,
											"end": 6009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 6009,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 5912,
											"end": 6009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6068,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6064,
											"end": 6068,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6130,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6117,
											"end": 6131,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6131,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6146,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6140,
											"end": 6803,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6803,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6140,
											"end": 6803,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6847,
											"end": 6848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6870,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6861,
											"end": 6950,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6861,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 6861,
											"end": 6950,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6916,
											"end": 6935,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6916,
											"end": 6935,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6916,
											"end": 6935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6861,
											"end": 6950,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 6861,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5665,
											"end": 5666,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5661,
											"end": 5672,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5661,
											"end": 5672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5661,
											"end": 5672,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5657,
											"end": 5681,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 5653,
											"end": 5682,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5683,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5690,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5697,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 7044,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 7044,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6110,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 6110,
											"end": 7054,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6803,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6140,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4934,
											"end": 4935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4927,
											"end": 4941,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4941,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4971,
											"end": 4975,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4958,
											"end": 4976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4958,
											"end": 4976,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6294,
											"end": 6530,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6294,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6308,
											"end": 6315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6316,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6294,
											"end": 6530,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6294,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6294,
											"end": 6530,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6416,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6416,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6391,
											"end": 6417,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6418,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6418,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6489,
											"end": 6516,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6489,
											"end": 6516,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6489,
											"end": 6516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6489,
											"end": 6516,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6457,
											"end": 6458,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6445,
											"end": 6459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6459,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6324,
											"end": 6343,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6324,
											"end": 6343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6294,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6294,
											"end": 6530,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6294,
											"end": 6530,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6294,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6298,
											"end": 6301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6558,
											"end": 6564,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6549,
											"end": 6556,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6543,
											"end": 6744,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6543,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6543,
											"end": 6744,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6619,
											"end": 6638,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6619,
											"end": 6638,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6619,
											"end": 6638,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6639,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6702,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6698,
											"end": 6712,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6717,
											"name": "PUSH",
											"source": 6,
											"value": "F8"
										},
										{
											"begin": 6694,
											"end": 6718,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6690,
											"end": 6727,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 6686,
											"end": 6728,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6729,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6730,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6543,
											"end": 6744,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6543,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6790,
											"end": 6791,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6774,
											"end": 6788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6788,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6770,
											"end": 6792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6757,
											"end": 6793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6757,
											"end": 6793,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5708,
											"end": 7060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/token/ERC20//extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"src/ERC20Initializable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize(address,string,string)": "90657147",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(address,string,string)\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC20Initializable.sol\":\"ERC20Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"@openzeppelin/contracts/token/ERC20//extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/ERC20Initializable.sol\":{\"keccak256\":\"0xb1e9dc7dbb591721621ce7a5bf1690ffb94dc825839e8c834f768a90fccb9a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61493859e5390cd183fe23dbcc3a58bfb737d764959ac0568c9654ae8db972c4\",\"dweb:/ipfs/QmdK694KGMawYoghcxwnUKR7inKjxNdyhUiqneK2f39YaU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "src/ERC20Initializable.sol:ERC20Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "src/ERC20Initializable.sol:ERC20Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 642,
								"contract": "src/ERC20Initializable.sol:ERC20Initializable",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 648,
								"contract": "src/ERC20Initializable.sol:ERC20Initializable",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 650,
								"contract": "src/ERC20Initializable.sol:ERC20Initializable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 652,
								"contract": "src/ERC20Initializable.sol:ERC20Initializable",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 654,
								"contract": "src/ERC20Initializable.sol:ERC20Initializable",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Address": [
							601
						],
						"Initializable": [
							168
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 169,
							"sourceUnit": 602,
							"src": "138:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "173:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "Initializable",
							"nameLocation": "2401:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:0",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 6,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "2535:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 5,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 9,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "2664:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 8,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 14,
									"name": "Initialized",
									"nameLocation": "2798:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "2810:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 11,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:0"
									},
									"src": "2792:33:0"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3258:472:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3273:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 69,
														"src": "3268:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 17,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3268:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3290:14:0",
													"subExpression": {
														"id": 19,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "3291:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3268:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 23,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 18,
																			"src": "3336:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 26,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 24,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "3354:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 25,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3369:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3354:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3336:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 28,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3335:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 36,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3376:34:0",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 33,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3404:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$168",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$168",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 32,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3396:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 31,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3396:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 34,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3396:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 29,
																						"name": "Address",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 601,
																						"src": "3377:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_Address_$601_$",
																							"typeString": "type(library Address)"
																						}
																					},
																					"id": 30,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3385:10:0",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 289,
																					"src": "3377:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 35,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3377:33:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 39,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 37,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "3414:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 38,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3430:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3414:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3376:55:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 41,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3375:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3335:97:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3446:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3314:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:190:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "3314:190:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "3514:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3529:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3514:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "3514:16:0"
											},
											{
												"condition": {
													"id": 50,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3544:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 56,
												"nodeType": "IfStatement",
												"src": "3540:65:0",
												"trueBody": {
													"id": 55,
													"nodeType": "Block",
													"src": "3560:45:0",
													"statements": [
														{
															"expression": {
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 51,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3574:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3590:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3574:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 54,
															"nodeType": "ExpressionStatement",
															"src": "3574:20:0"
														}
													]
												}
											},
											{
												"id": 57,
												"nodeType": "PlaceholderStatement",
												"src": "3614:1:0"
											},
											{
												"condition": {
													"id": 58,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3629:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 68,
												"nodeType": "IfStatement",
												"src": "3625:99:0",
												"trueBody": {
													"id": 67,
													"nodeType": "Block",
													"src": "3645:79:0",
													"statements": [
														{
															"expression": {
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 59,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3659:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3675:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3659:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 62,
															"nodeType": "ExpressionStatement",
															"src": "3659:21:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 64,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3711:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 63,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "3699:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3699:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 66,
															"nodeType": "EmitStatement",
															"src": "3694:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "2831:399:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 70,
									"name": "initializer",
									"nameLocation": "3244:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:0"
									},
									"src": "3235:495:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "4841:255:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4859:14:0",
																"subExpression": {
																	"id": 76,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "4860:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 78,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "4877:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 79,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "4892:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4877:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4859:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4901:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 75,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4851:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4851:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "4851:99:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 85,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "4960:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 86,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "4975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4960:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "4960:22:0"
											},
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 89,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "4992:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5008:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4992:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "4992:20:0"
											},
											{
												"id": 93,
												"nodeType": "PlaceholderStatement",
												"src": "5022:1:0"
											},
											{
												"expression": {
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 94,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "5033:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5049:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5033:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "5033:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 99,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "5081:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 98,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "5069:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5069:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "5064:25:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3736:1062:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 103,
									"name": "reinitializer",
									"nameLocation": "4812:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4832:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4826:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 72,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4826:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4825:15:0"
									},
									"src": "4803:293:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "5334:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "5352:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5367:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5344:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5344:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "5344:69:0"
											},
											{
												"id": 111,
												"nodeType": "PlaceholderStatement",
												"src": "5423:1:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "5102:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 113,
									"name": "onlyInitializing",
									"nameLocation": "5315:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5331:2:0"
									},
									"src": "5306:125:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "5966:231:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5984:14:0",
															"subExpression": {
																"id": 118,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "5985:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6000:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5976:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5976:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "5976:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 123,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "6056:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6077:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 125,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6077:5:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 124,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6072:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6072:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6084:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6072:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6056:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "6052:139:0",
												"trueBody": {
													"id": 146,
													"nodeType": "Block",
													"src": "6089:102:0",
													"statements": [
														{
															"expression": {
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 130,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "6103:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6123:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 132,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6123:5:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 131,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6118:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6118:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6130:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6118:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6103:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 137,
															"nodeType": "ExpressionStatement",
															"src": "6103:30:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 141,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6169:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 140,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6169:5:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 139,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6164:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6164:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6176:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6164:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 138,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "6152:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6152:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 145,
															"nodeType": "EmitStatement",
															"src": "6147:33:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "5437:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5926:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5946:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5966:0:0"
									},
									"scope": 168,
									"src": "5917:280:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "6371:36:0",
										"statements": [
											{
												"expression": {
													"id": 155,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "6388:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 154,
												"id": 156,
												"nodeType": "Return",
												"src": "6381:19:0"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "6203:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6316:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6338:2:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "6364:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 152,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6364:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6363:7:0"
									},
									"scope": 168,
									"src": "6307:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "6579:37:0",
										"statements": [
											{
												"expression": {
													"id": 164,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "6596:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 163,
												"id": 165,
												"nodeType": "Return",
												"src": "6589:20:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "6413:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6547:2:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6573:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6573:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6572:6:0"
									},
									"scope": 168,
									"src": "6523:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 169,
							"src": "2383:4235:0",
							"usedErrors": []
						}
					],
					"src": "113:6506:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20//extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20//extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							271
						],
						"IERC20Metadata": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 272,
							"src": "135:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 173,
										"name": "IERC20",
										"nameLocations": [
											"305:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 271,
										"src": "305:6:1"
									},
									"id": 174,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:1"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 172,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:1",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								271
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "416:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 177,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:1"
									},
									"scope": 193,
									"src": "377:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:1",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "539:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:1"
									},
									"scope": 193,
									"src": "498:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:1",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "673:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 189,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:1"
									},
									"scope": 193,
									"src": "630:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 194,
							"src": "277:405:1",
							"usedErrors": []
						}
					],
					"src": "110:573:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							271
						]
					},
					"id": 272,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 196,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 271,
							"linearizedBaseContracts": [
								271
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 205,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 214,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 271,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 271,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 271,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 271,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 271,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2668:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2682:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2694:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:2"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2728:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:2"
									},
									"scope": 271,
									"src": "2646:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 272,
							"src": "202:2534:2",
							"usedErrors": []
						}
					],
					"src": "106:2631:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							601
						]
					},
					"id": 602,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 273,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 274,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 601,
							"linearizedBaseContracts": [
								601
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1478:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 282,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "1702:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 281,
												"id": 287,
												"nodeType": "Return",
												"src": "1695:30:3"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1432:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:3"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1472:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:3"
									},
									"scope": 601,
									"src": "1412:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "2718:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 300,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$601",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$601",
																				"typeString": "library Address"
																			}
																		],
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 298,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 303,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "2761:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 297,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:3"
											},
											{
												"assignments": [
													309,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 322,
														"src": "2813:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 308,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 316,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 310,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "2831:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 312,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "2853:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 318,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "2882:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:3"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2666:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2693:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:3"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:3"
									},
									"scope": 601,
									"src": "2647:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3790:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 334,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "3829:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "3837:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 333,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															381,
															425
														],
														"referencedDeclaration": 425,
														"src": "3807:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 332,
												"id": 339,
												"nodeType": "Return",
												"src": "3800:79:3"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3723:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3739:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:3"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3776:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:3"
									},
									"scope": 601,
									"src": "3701:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "4255:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 354,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "4294:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 355,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "4302:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 357,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "4311:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 353,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															381,
															425
														],
														"referencedDeclaration": 425,
														"src": "4272:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 352,
												"id": 359,
												"nodeType": "Return",
												"src": "4265:59:3"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "4139:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "4163:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "4190:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 347,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:3"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "4241:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 350,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:3"
									},
									"scope": 601,
									"src": "4108:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "4806:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "4845:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "4853:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 376,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "4859:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 373,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															381,
															425
														],
														"referencedDeclaration": 425,
														"src": "4823:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 372,
												"id": 379,
												"nodeType": "Return",
												"src": "4816:94:3"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "4724:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "4740:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "4759:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:3"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "4792:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:3"
									},
									"scope": 601,
									"src": "4693:224:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "5344:267:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 398,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$601",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$601",
																				"typeString": "library Address"
																			}
																		],
																		"id": 397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 396,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 401,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "5387:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:3"
											},
											{
												"assignments": [
													407,
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 424,
														"src": "5446:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 406,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 424,
														"src": "5460:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 408,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 416,
												"initialValue": {
													"arguments": [
														{
															"id": 414,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "5513:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 410,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "5487:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 412,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "5506:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "5562:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "5570:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 420,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "5579:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 421,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5591:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 417,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "5535:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 394,
												"id": 423,
												"nodeType": "Return",
												"src": "5528:76:3"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "5205:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "5229:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "5256:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "5279:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 389,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:3"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "5330:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:3"
									},
									"scope": 601,
									"src": "5165:446:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "5888:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "5924:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "5932:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 435,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															442,
															471
														],
														"referencedDeclaration": 471,
														"src": "5905:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 434,
												"id": 440,
												"nodeType": "Return",
												"src": "5898:80:3"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "5816:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "5832:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 429,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:3"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "5874:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:3"
									},
									"scope": 601,
									"src": "5788:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "6327:168:3",
										"statements": [
											{
												"assignments": [
													455,
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "6338:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 454,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "6352:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 456,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 462,
												"initialValue": {
													"arguments": [
														{
															"id": 460,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "6397:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 458,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "6379:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "6446:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 465,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "6454:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 466,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "6463:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 467,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "6475:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 463,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "6419:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 453,
												"id": 469,
												"nodeType": "Return",
												"src": "6412:76:3"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "6206:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "6230:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "6257:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 448,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:3"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "6313:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 451,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:3"
									},
									"scope": 601,
									"src": "6169:326:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "6771:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 482,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "6809:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "6817:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 481,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															488,
															517
														],
														"referencedDeclaration": 517,
														"src": "6788:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 480,
												"id": 486,
												"nodeType": "Return",
												"src": "6781:84:3"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "6704:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "6720:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "6757:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:3"
									},
									"scope": 601,
									"src": "6674:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "7213:170:3",
										"statements": [
											{
												"assignments": [
													501,
													503
												],
												"declarations": [
													{
														"constant": false,
														"id": 501,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "7224:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 500,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 503,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "7238:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 502,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 508,
												"initialValue": {
													"arguments": [
														{
															"id": 506,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "7285:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 504,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "7265:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 510,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "7334:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "7342:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 512,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "7351:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 513,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "7363:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 509,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "7307:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 499,
												"id": 515,
												"nodeType": "Return",
												"src": "7300:76:3"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "7097:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "7121:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "7148:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:3"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "7199:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 497,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:3"
									},
									"scope": 601,
									"src": "7058:325:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "7865:434:3",
										"statements": [
											{
												"condition": {
													"id": 531,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 522,
													"src": "7879:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 553,
													"nodeType": "Block",
													"src": "8235:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 549,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "8257:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 550,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 526,
																		"src": "8269:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 548,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "8249:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 552,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:3"
														}
													]
												},
												"id": 554,
												"nodeType": "IfStatement",
												"src": "7875:418:3",
												"trueBody": {
													"id": 547,
													"nodeType": "Block",
													"src": "7888:341:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 532,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "7906:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 544,
															"nodeType": "IfStatement",
															"src": "7902:286:3",
															"trueBody": {
																"id": 543,
																"nodeType": "Block",
																"src": "7930:258:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 538,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 520,
																							"src": "8132:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 537,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 289,
																						"src": "8121:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 539,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 540,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 536,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 542,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 545,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "8208:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 530,
															"id": 546,
															"nodeType": "Return",
															"src": "8201:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "7716:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "7740:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "7762:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 523,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "7795:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 525,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:3"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "7851:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:3"
									},
									"scope": 601,
									"src": "7671:628:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "8680:135:3",
										"statements": [
											{
												"condition": {
													"id": 568,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 559,
													"src": "8694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 577,
													"nodeType": "Block",
													"src": "8751:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 573,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "8773:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 574,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "8785:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 572,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "8765:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 576,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:3"
														}
													]
												},
												"id": 578,
												"nodeType": "IfStatement",
												"src": "8690:119:3",
												"trueBody": {
													"id": 571,
													"nodeType": "Block",
													"src": "8703:42:3",
													"statements": [
														{
															"expression": {
																"id": 569,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "8724:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 567,
															"id": 570,
															"nodeType": "Return",
															"src": "8717:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:3",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "8555:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "8577:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 560,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "8610:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 562,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:3"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "8666:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:3"
									},
									"scope": 601,
									"src": "8520:295:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "8904:457:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 587,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "8980:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "9310:45:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "9331:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 593,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 596,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:3"
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "8976:379:3",
												"trueBody": {
													"id": 592,
													"nodeType": "Block",
													"src": "9003:301:3",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 582,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 582,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:3",
																	"valueSize": 1
																}
															],
															"id": 591,
															"nodeType": "InlineAssembly",
															"src": "9152:142:3"
														}
													]
												}
											}
										]
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "8838:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "8863:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 583,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:3"
									},
									"scope": 601,
									"src": "8821:540:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 602,
							"src": "194:9169:3",
							"usedErrors": []
						}
					],
					"src": "101:9263:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							623
						]
					},
					"id": 624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 603,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 604,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 623,
							"linearizedBaseContracts": [
								623
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 609,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 608,
												"id": 611,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 623,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 618,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 617,
												"id": 620,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 623,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 624,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"src/ERC20Initializable.sol": {
				"ast": {
					"absolutePath": "src/ERC20Initializable.sol",
					"exportedSymbols": {
						"Address": [
							601
						],
						"Context": [
							623
						],
						"ERC20Initializable": [
							1153
						],
						"IERC20": [
							271
						],
						"IERC20Metadata": [
							193
						],
						"Initializable": [
							168
						]
					},
					"id": 1154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 626,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1154,
							"sourceUnit": 272,
							"src": "130:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20//extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20//extensions/IERC20Metadata.sol",
							"id": 627,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1154,
							"sourceUnit": 194,
							"src": "187:76:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 628,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1154,
							"sourceUnit": 624,
							"src": "264:51:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"id": 629,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1154,
							"sourceUnit": 169,
							"src": "316:63:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 631,
										"name": "Context",
										"nameLocations": [
											"1656:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "1656:7:5"
									},
									"id": 632,
									"nodeType": "InheritanceSpecifier",
									"src": "1656:7:5"
								},
								{
									"baseName": {
										"id": 633,
										"name": "IERC20",
										"nameLocations": [
											"1665:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 271,
										"src": "1665:6:5"
									},
									"id": 634,
									"nodeType": "InheritanceSpecifier",
									"src": "1665:6:5"
								},
								{
									"baseName": {
										"id": 635,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1673:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 193,
										"src": "1673:14:5"
									},
									"id": 636,
									"nodeType": "InheritanceSpecifier",
									"src": "1673:14:5"
								},
								{
									"baseName": {
										"id": 637,
										"name": "Initializable",
										"nameLocations": [
											"1689:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 168,
										"src": "1689:13:5"
									},
									"id": 638,
									"nodeType": "InheritanceSpecifier",
									"src": "1689:13:5"
								}
							],
							"canonicalName": "ERC20Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 630,
								"nodeType": "StructuredDocumentation",
								"src": "381:1243:5",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1153,
							"linearizedBaseContracts": [
								1153,
								168,
								193,
								271,
								623
							],
							"name": "ERC20Initializable",
							"nameLocation": "1634:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 642,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1745:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "1709:45:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 641,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 639,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1717:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1709:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 640,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1728:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 648,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1817:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "1761:67:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 647,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 643,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1769:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1761:47:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 646,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 644,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1788:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1780:27:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 645,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1799:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 650,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1851:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "1835:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 649,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1835:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 652,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1885:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "1870:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 651,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1870:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 654,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1911:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "1896:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 653,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1896:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "2223:89:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 667,
															"name": "creator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "2239:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2248:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3237",
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2252:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_27_by_1",
																	"typeString": "int_const 27"
																},
																"value": "27"
															},
															"src": "2248:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															}
														],
														"id": 666,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "2233:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2233:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "2233:22:5"
											},
											{
												"expression": {
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 673,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "2265:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 674,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "2273:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2265:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "2265:13:5"
											},
											{
												"expression": {
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 677,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "2288:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 678,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "2298:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2288:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "2288:17:5"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "1925:171:5",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"functionSelector": "90657147",
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 664,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 663,
												"name": "initializer",
												"nameLocations": [
													"2207:11:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 70,
												"src": "2207:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2207:11:5"
										}
									],
									"name": "initialize",
									"nameLocation": "2110:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "2129:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "2121:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2152:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "2138:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 658,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2138:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2173:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "2159:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 660,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2159:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2120:61:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:0:5"
									},
									"scope": 1153,
									"src": "2101:211:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										180
									],
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "2437:29:5",
										"statements": [
											{
												"expression": {
													"id": 688,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 652,
													"src": "2454:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 687,
												"id": 689,
												"nodeType": "Return",
												"src": "2447:12:5"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "2318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2390:2:5"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "2422:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 685,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2422:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:15:5"
									},
									"scope": 1153,
									"src": "2377:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										186
									],
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "2641:31:5",
										"statements": [
											{
												"expression": {
													"id": 697,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 654,
													"src": "2658:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 696,
												"id": 698,
												"nodeType": "Return",
												"src": "2651:14:5"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "2472:102:5",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2588:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2594:2:5"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2626:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 694,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2626:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:15:5"
									},
									"scope": 1153,
									"src": "2579:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										192
									],
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "3361:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3378:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 705,
												"id": 707,
												"nodeType": "Return",
												"src": "3371:9:5"
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "2678:622:5",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3314:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3322:2:5"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "3354:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 703,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3354:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:7:5"
									},
									"scope": 1153,
									"src": "3305:82:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										220
									],
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "3508:36:5",
										"statements": [
											{
												"expression": {
													"id": 715,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 650,
													"src": "3525:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 716,
												"nodeType": "Return",
												"src": "3518:19:5"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "3393:49:5",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3456:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3467:2:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "3499:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:9:5"
									},
									"scope": 1153,
									"src": "3447:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										228
									],
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "3676:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 726,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "3693:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 728,
													"indexExpression": {
														"id": 727,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "3703:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3693:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 725,
												"id": 729,
												"nodeType": "Return",
												"src": "3686:25:5"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "3550:47:5",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3611:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3629:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3621:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3621:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3620:17:5"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3667:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3667:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3666:9:5"
									},
									"scope": 1153,
									"src": "3602:116:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										238
									],
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "4018:104:5",
										"statements": [
											{
												"assignments": [
													742
												],
												"declarations": [
													{
														"constant": false,
														"id": 742,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4036:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 754,
														"src": "4028:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 741,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4028:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 745,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 743,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "4044:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4044:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4028:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 747,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "4076:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "4083:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "4087:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 746,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "4066:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4066:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "4066:28:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4111:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 740,
												"id": 753,
												"nodeType": "Return",
												"src": "4104:11:5"
											}
										]
									},
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "3724:185:5",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3923:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3940:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "3932:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3952:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "3944:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3944:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3931:28:5"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "4008:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4008:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:6:5"
									},
									"scope": 1153,
									"src": "3914:208:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										248
									],
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "4305:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 765,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "4322:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 767,
														"indexExpression": {
															"id": 766,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "4334:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4322:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 769,
													"indexExpression": {
														"id": 768,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "4341:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4322:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 764,
												"id": 770,
												"nodeType": "Return",
												"src": "4315:34:5"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "4128:47:5",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4189:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4207:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "4199:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4199:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4222:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "4214:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4198:32:5"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "4292:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4292:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4291:9:5"
									},
									"scope": 1153,
									"src": "4180:176:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										258
									],
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "4772:108:5",
										"statements": [
											{
												"assignments": [
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4790:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "4782:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 782,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4782:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 786,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 784,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "4798:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4798:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4782:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 788,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "4829:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 789,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "4836:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "4845:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 787,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "4820:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4820:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "4820:32:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4869:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 781,
												"id": 794,
												"nodeType": "Return",
												"src": "4862:11:5"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "4362:297:5",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4673:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4689:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "4681:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4681:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4706:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "4698:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4680:33:5"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "4762:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 779,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4762:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4761:6:5"
									},
									"scope": 1153,
									"src": "4664:216:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										270
									],
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "5566:153:5",
										"statements": [
											{
												"assignments": [
													809
												],
												"declarations": [
													{
														"constant": false,
														"id": 809,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5584:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 827,
														"src": "5576:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 808,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5576:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 810,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "5594:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5594:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5576:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 814,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "5632:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "5638:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "5647:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 813,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "5616:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5616:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "5616:38:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 820,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "5674:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "5680:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "5684:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 819,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "5664:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5664:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "5664:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5708:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 807,
												"id": 826,
												"nodeType": "Return",
												"src": "5701:11:5"
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "4886:551:5",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5451:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5481:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5473:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5473:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5503:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5495:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5495:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5523:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5515:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5515:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5463:72:5"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5560:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 805,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5560:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:6:5"
									},
									"scope": 1153,
									"src": "5442:277:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "6236:140:5",
										"statements": [
											{
												"assignments": [
													839
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6254:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 856,
														"src": "6246:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 838,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6246:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 840,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "6262:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6262:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6246:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "6293:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "6300:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 847,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "6319:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 848,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 831,
																		"src": "6326:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 846,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "6309:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6309:25:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 850,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "6337:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6309:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "6284:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6284:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "6284:64:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6365:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 837,
												"id": 855,
												"nodeType": "Return",
												"src": "6358:11:5"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "5725:384:5",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6123:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6149:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "6141:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6141:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6166:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "6158:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6158:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6140:37:5"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "6226:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 835,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6226:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6225:6:5"
									},
									"scope": 1153,
									"src": "6114:262:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "6990:362:5",
										"statements": [
											{
												"assignments": [
													868
												],
												"declarations": [
													{
														"constant": false,
														"id": 868,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7008:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "7000:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 867,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7000:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 871,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 869,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "7016:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7016:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7000:28:5"
											},
											{
												"assignments": [
													873
												],
												"declarations": [
													{
														"constant": false,
														"id": 873,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "7046:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "7038:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 872,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7038:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 878,
												"initialValue": {
													"arguments": [
														{
															"id": 875,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "7075:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "7082:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 874,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "7065:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7065:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7038:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 880,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "7121:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 881,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "7141:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7121:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7170:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7100:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7100:119:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "7100:119:5"
											},
											{
												"id": 894,
												"nodeType": "UncheckedBlock",
												"src": "7229:95:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 887,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "7262:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 888,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "7269:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 889,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 873,
																		"src": "7278:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 890,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "7297:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7278:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 886,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "7253:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7253:60:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 893,
														"nodeType": "ExpressionStatement",
														"src": "7253:60:5"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7341:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 866,
												"id": 896,
												"nodeType": "Return",
												"src": "7334:11:5"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "6382:476:5",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6872:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6898:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6890:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6890:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6915:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6907:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6907:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6889:42:5"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "6980:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 864,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6980:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6979:6:5"
									},
									"scope": 1153,
									"src": "6863:489:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "7817:194:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 909,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "7835:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7851:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7843:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 910,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7843:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7843:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7835:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7855:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 908,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7827:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7827:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "7827:68:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 919,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "7913:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7927:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7919:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 920,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7919:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7919:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7913:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7931:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7905:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7905:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "7905:64:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "7987:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "7993:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "7997:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 928,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "7979:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7979:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "7979:25:5"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "7358:354:5",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7726:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7753:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "7745:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7745:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7775:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "7767:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7767:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7795:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "7787:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7787:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:72:5"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7817:0:5"
									},
									"scope": 1153,
									"src": "7717:294:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "8417:943:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 945,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "8431:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8447:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8439:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 946,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8439:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8439:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8431:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "8504:368:5",
													"statements": [
														{
															"assignments": [
																957
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 957,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "8526:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 978,
																	"src": "8518:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 956,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8518:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 961,
															"initialValue": {
																"baseExpression": {
																	"id": 958,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "8540:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 960,
																"indexExpression": {
																	"id": 959,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "8550:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8540:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8518:37:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 963,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 957,
																			"src": "8594:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 964,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "8609:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8594:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8633:40:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																			"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																		},
																		"value": "ERC20: transfer amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																			"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																		}
																	],
																	"id": 962,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8569:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8569:118:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 968,
															"nodeType": "ExpressionStatement",
															"src": "8569:118:5"
														},
														{
															"id": 977,
															"nodeType": "UncheckedBlock",
															"src": "8701:161:5",
															"statements": [
																{
																	"expression": {
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 969,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "8809:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 971,
																			"indexExpression": {
																				"id": 970,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 938,
																				"src": "8819:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8809:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 972,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 957,
																				"src": "8827:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 973,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 942,
																				"src": "8841:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8827:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8809:38:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 976,
																	"nodeType": "ExpressionStatement",
																	"src": "8809:38:5"
																}
															]
														}
													]
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "8427:445:5",
												"trueBody": {
													"id": 955,
													"nodeType": "Block",
													"src": "8451:47:5",
													"statements": [
														{
															"expression": {
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 951,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "8465:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 952,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "8481:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8465:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 954,
															"nodeType": "ExpressionStatement",
															"src": "8465:22:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 980,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "8886:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8900:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8892:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 981,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8892:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8892:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8886:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 999,
													"nodeType": "Block",
													"src": "9104:208:5",
													"statements": [
														{
															"id": 998,
															"nodeType": "UncheckedBlock",
															"src": "9118:184:5",
															"statements": [
																{
																	"expression": {
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 992,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "9264:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 994,
																			"indexExpression": {
																				"id": 993,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 940,
																				"src": "9274:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9264:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 995,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "9281:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9264:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 997,
																	"nodeType": "ExpressionStatement",
																	"src": "9264:23:5"
																}
															]
														}
													]
												},
												"id": 1000,
												"nodeType": "IfStatement",
												"src": "8882:430:5",
												"trueBody": {
													"id": 991,
													"nodeType": "Block",
													"src": "8904:194:5",
													"statements": [
														{
															"id": 990,
															"nodeType": "UncheckedBlock",
															"src": "8918:170:5",
															"statements": [
																{
																	"expression": {
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 986,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 650,
																			"src": "9051:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 987,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "9067:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9051:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 989,
																	"nodeType": "ExpressionStatement",
																	"src": "9051:22:5"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1002,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "9336:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "9342:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "9346:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1001,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "9327:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9327:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "EmitStatement",
												"src": "9322:31:5"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "8017:289:5",
										"text": " @dev Transfers `amount` of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is\n the zero address. All customizations to transfers, mints, and burns should be done by overriding this function.\n Emits a {Transfer} event."
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8320:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8345:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "8337:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8337:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8367:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "8359:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8359:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8387:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "8379:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8379:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8327:72:5"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8417:0:5"
									},
									"scope": 1153,
									"src": "8311:1049:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "9749:128:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1017,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "9767:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9786:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9778:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1018,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9778:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9778:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9767:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9790:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1016,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9759:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9759:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "9759:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9850:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9842:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1027,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9842:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9842:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1031,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "9854:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "9863:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "9834:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9834:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "9834:36:5"
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "9366:321:5",
										"text": " @dev Creates `amount` tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9701:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9715:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "9707:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9707:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9732:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "9724:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9724:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9706:33:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9749:0:5"
									},
									"scope": 1153,
									"src": "9692:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "10248:130:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1045,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "10266:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10285:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10277:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1046,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10277:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10277:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10266:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10289:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1044,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10258:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10258:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "10258:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1055,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "10343:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10360:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10352:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1056,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10352:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10352:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "10364:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1054,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "10335:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10335:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "10335:36:5"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "9883:303:5",
										"text": " @dev Destroys `amount` tokens from `account`, by transferring it to address(0).\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10200:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10214:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "10206:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "10223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10205:33:5"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10248:0:5"
									},
									"scope": 1153,
									"src": "10191:187:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "10914:257:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1075,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "10932:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10949:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10941:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1076,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10941:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10941:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10932:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10953:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1074,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10924:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10924:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "10924:68:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1085,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "11010:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11029:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11021:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1086,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11021:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11021:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11010:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11033:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11002:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11002:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "11002:68:5"
											},
											{
												"expression": {
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1094,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "11081:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1097,
															"indexExpression": {
																"id": 1095,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "11093:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11081:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1098,
														"indexExpression": {
															"id": 1096,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "11100:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11081:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1099,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "11111:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11081:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "11081:36:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1103,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "11141:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "11148:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "11157:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1102,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "11132:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11132:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "EmitStatement",
												"src": "11127:37:5"
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "10384:412:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10810:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10836:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "10828:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10828:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10859:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "10851:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10851:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10884:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "10876:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10876:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10818:78:5"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10914:0:5"
									},
									"scope": 1153,
									"src": "10801:370:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "11572:367:5",
										"statements": [
											{
												"assignments": [
													1120
												],
												"declarations": [
													{
														"constant": false,
														"id": 1120,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11590:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1151,
														"src": "11582:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1119,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11582:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1125,
												"initialValue": {
													"arguments": [
														{
															"id": 1122,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "11619:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1123,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1114,
															"src": "11626:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1121,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "11609:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11609:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11582:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1126,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "11648:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11673:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1128,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11673:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1127,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11668:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11668:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11682:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11668:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11648:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1150,
												"nodeType": "IfStatement",
												"src": "11644:289:5",
												"trueBody": {
													"id": 1149,
													"nodeType": "Block",
													"src": "11687:246:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1134,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "11726:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1135,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "11746:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11726:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11770:31:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1133,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11701:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11701:114:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1139,
															"nodeType": "ExpressionStatement",
															"src": "11701:114:5"
														},
														{
															"id": 1148,
															"nodeType": "UncheckedBlock",
															"src": "11829:94:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1141,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "11866:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1142,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1114,
																				"src": "11873:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1143,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1120,
																					"src": "11882:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1144,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "11901:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11882:25:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1140,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1109,
																			"src": "11857:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11857:51:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1147,
																	"nodeType": "ExpressionStatement",
																	"src": "11857:51:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "11177:270:5",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11461:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11494:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "11486:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11517:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "11509:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11509:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11542:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "11534:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11534:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:78:5"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11572:0:5"
									},
									"scope": 1153,
									"src": "11452:487:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1154,
							"src": "1625:10316:5",
							"usedErrors": []
						}
					],
					"src": "104:11838:5"
				},
				"id": 5
			}
		}
	}
}